{"version":3,"sources":["utils/authConnector.js","utils/authUtils.js","components/AuthScreen.js","utils/ledgerConnector.js","components/LedgerList.js","components/LedgerDetails.js","App.js","serviceWorker.js","index.js"],"names":["getServerUrl","isReachable","fetch","this","method","mode","then","resp","catch","err","login","username","password","url","headers","body","JSON","stringify","UserName","Password","response","ok","json","data","success","token","register","getToken","localStorage","getItem","saveToken","setItem","AuthSceen","props","showLogin","bind","showRegister","handleInputChange","handleLogin","handleRegister","verifyPassword","loggedIn","completionCallback","state","regSuccess","regFailed","loginFailed","LoginUserName","LoginPassword","RegUserName","RegPassword","RegPasswordVerify","setState","event","value","target","name","preventDefault","authConnector","result","authUtils","onSubmit","Stack","tokens","childrenGap","horizontalAlign","MessageBar","messageBarType","MessageBarType","isMultiline","error","TextField","label","onChange","required","type","PrimaryButton","text","Link","onClick","onGetErrorMessage","Component","listLedgers","getUrl","authHeader","Headers","status","getLedger","year","month","addLedger","ledger","addUrl","updateLedger","updateUrl","Id","deleteLedger","deleteUrl","LedgerList","updateLedgerList","showFixed","onChangeHandler","renderCell","selectionHandler","selectHandler","loginHandler","months","ledgers","commandItems","key","iconProps","iconName","farItems","ariaLabel","iconOnly","dropdownOptions","displayedLedgers","years","i","length","indexOf","push","parseInt","sort","a","b","options","ledgerConnector","sortLedgers","configureDropdown","filter","item","Year","Month","date","Date","latestYear","getFullYear","latestMonth","getMonth","dataset","filterByYear","index","className","data-year","data-month","Text","data-is-scrollable","Dropdown","placeholder","CommandBar","items","List","onRenderCell","LedgerDetails","save","addItem","handleTabClick","renderItemColumn","backToList","returnHandler","parameters","selection","newLedger","displayprops","columns","fieldName","isPadded","stackItemStyles","root","alignItems","justifyContent","display","Type","Debits","DebitTotal","Credits","CreditTotal","selectedTab","saveSuccess","saveFailed","getLedgerDetails","prevProps","console","log","prevState","concat","Label","Amount","total","current","itemKey","map","el","reduce","calculateTotal","column","data-index","Pivot","selectedKey","onLinkClick","styles","link","width","linkIsSelected","PivotItem","headerText","DetailsList","selectionMode","SelectionMode","none","layoutMode","DetailsListLayoutMode","justified","isHeaderVisible","onRenderItemColumn","horizontal","padding","Item","grow","App","title","showLedgerList","showLedger","selectedLedger","origin","dir","variant","CSSTransition","in","timeout","classNames","mountOnEnter","unmountOnExit","AuthScreen","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initializeIcons","ReactDOM","render","Fabric","document","getElementById","URL","process","href","addEventListener","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c4448ab9.chunk.js","sourcesContent":["function getServerUrl() {\r\n  return 'https://fintrack-image-occpy2fuaa-an.a.run.app';\r\n  //return 'http://localhost'\r\n}\r\n\r\nfunction isReachable() {\r\n  return fetch(this.getServerUrl(), { method: 'HEAD', mode: 'no-cors' })\r\n    .then((resp) => {\r\n      return true;\r\n    })\r\n    .catch((err) => {\r\n      return false;\r\n    });\r\n}\r\n\r\nfunction login(username, password) {\r\n  var url = this.getServerUrl() + '/api/user/login';\r\n\r\n  return fetch(url, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ UserName: username, Password: password })\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json().then((data) => {\r\n        return {\r\n          success: true,\r\n          token: data.token\r\n        };\r\n      });\r\n    }\r\n    else {\r\n      return {\r\n        success: false\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nfunction register(username, password) {\r\n  var url = this.getServerUrl() + '/api/user/login';\r\n\r\n  return fetch(url, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ UserName: username, Password: password })\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return {\r\n        success: true\r\n      };\r\n    }\r\n    else {\r\n      return {\r\n        success: false\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nexport default {\r\n  getServerUrl,\r\n  isReachable,\r\n  login,\r\n  register\r\n};\r\n","function getToken() {\r\n  return localStorage.getItem('authToken');\r\n}\r\n\r\nfunction saveToken(token) {\r\n  localStorage.setItem('authToken', token);\r\n}\r\n\r\nexport default {\r\n  getToken,\r\n  saveToken\r\n};","import React, { Component } from 'react';\r\nimport { PrimaryButton, MessageBar, MessageBarType } from 'office-ui-fabric-react';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport authConnector from '../utils/authConnector.js';\r\nimport authUtils from '../utils/authUtils.js';\r\n\r\nclass AuthSceen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.showLogin = this.showLogin.bind(this);\r\n    this.showRegister = this.showRegister.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.verifyPassword = this.verifyPassword.bind(this);\r\n\r\n    this.loggedIn = this.props.completionCallback;\r\n    this.state = {\r\n      showLogin: true,\r\n      showRegister: false,\r\n      regSuccess: false,\r\n      regFailed: false,\r\n      loginFailed: false,\r\n      LoginUserName: '',\r\n      LoginPassword: '',\r\n      RegUserName: '',\r\n      RegPassword: '',\r\n      RegPasswordVerify: ''\r\n    }\r\n  }\r\n\r\n  showLogin() {\r\n    this.setState({\r\n      showLogin: true,\r\n      showRegister: false,\r\n      regSuccess: false,\r\n      regFailed: false,\r\n      loginFailed: false\r\n    });\r\n  }\r\n\r\n  showRegister() {\r\n    this.setState({\r\n      showLogin: false,\r\n      showRegister: true,\r\n      regSuccess: false,\r\n      regFailed: false,\r\n      loginFailed: false\r\n    });\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  verifyPassword(value) {\r\n    return value === this.state.RegPassword ? '' : 'Passwords do not match';\r\n  }\r\n\r\n  handleLogin(event) {\r\n    event.preventDefault();\r\n\r\n    authConnector.login(this.state.LoginUserName, this.state.LoginPassword).then((result) => {\r\n      if (result.success) {\r\n        authUtils.saveToken(result.token);\r\n        this.setState({\r\n          regSuccess: false,\r\n          loginFailed: false\r\n        });\r\n        this.loggedIn();\r\n      }\r\n      else {\r\n        this.setState({\r\n          regSuccess: false,\r\n          loginFailed: true\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleRegister(event) {\r\n    event.preventDefault();\r\n\r\n    if (this.state.RegPassword !== this.state.RegPasswordVerify) {\r\n      return;\r\n    }\r\n\r\n    authConnector.register(this.state.LoginUserName, this.state.LoginPassword).then((result) => {\r\n      if (result.success) {\r\n        this.setState({\r\n          showLogin: true,\r\n          showRegister: false,\r\n          regSuccess: true,\r\n          regFailed: false\r\n        });\r\n      }\r\n      else {\r\n        this.setState({\r\n          regFailed: true\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.showLogin &&\r\n          <form onSubmit={this.handleLogin}>\r\n            <Stack tokens={{ childrenGap: 10 }} horizontalAlign=\"center\">\r\n              {\r\n                this.state.regSuccess &&\r\n                <MessageBar messageBarType={MessageBarType.success} isMultiline={false}>\r\n                  Registration successful\r\n                </MessageBar>\r\n              }\r\n              {\r\n                this.state.loginFailed &&\r\n                <MessageBar messageBarType={MessageBarType.error} isMultiline={false}>\r\n                  The username and password do not match\r\n                </MessageBar>\r\n              }\r\n              <TextField label=\"User name\" name=\"LoginUserName\" value={this.state.LoginUserName} onChange={this.handleInputChange} required />\r\n              <TextField label=\"Password\" name=\"LoginPassword\" value={this.state.LoginPassword} onChange={this.handleInputChange} type=\"password\" required />\r\n              <PrimaryButton text=\"Login\" type=\"submit\" />\r\n              <Link onClick={this.showRegister}>Click here to register</Link>\r\n            </Stack>\r\n          </form>\r\n        }\r\n        {\r\n          this.state.showRegister &&\r\n          <form onSubmit={this.handleRegister}>\r\n            <Stack tokens={{ childrenGap: 10 }} horizontalAlign=\"center\">\r\n              {\r\n                this.state.regFailed &&\r\n                <MessageBar messageBarType={MessageBarType.error} isMultiline={false}>\r\n                  The username and password do not match.\r\n                </MessageBar>\r\n              }\r\n              <TextField label=\"User name\" name=\"RegUserName\" value={this.state.RegUserName} onChange={this.handleInputChange} required />\r\n              <TextField label=\"Password\" name=\"RegPassword\" type=\"password\" value={this.state.RegPassword} onChange={this.handleInputChange} required />\r\n              <TextField label=\"Verify password\" name=\"RegPasswordVerify\" type=\"password\" value={this.state.RegPasswordVerify} onChange={this.handleInputChange} onGetErrorMessage={this.verifyPassword} required />\r\n              <PrimaryButton text=\"Register\" type=\"submit\" />\r\n              <Link onClick={this.showLogin}>Return to login</Link>\r\n            </Stack>\r\n          </form>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthSceen;","function getServerUrl() {\r\n  return 'https://fintrack-image-occpy2fuaa-an.a.run.app';\r\n  //return 'http://localhost'\r\n}\r\n\r\nfunction listLedgers(token) {\r\n  var getUrl = this.getServerUrl() + '/api/ledger/list';\r\n  var authHeader = new Headers({\r\n    'Authorization': 'Bearer ' + token\r\n  });\r\n\r\n  return fetch(getUrl, { headers: authHeader }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json().then((data) => {\r\n        return {\r\n          success: true,\r\n          data: data\r\n        };\r\n      });\r\n    }\r\n    else {\r\n      if (response.status === 404) {\r\n        return {\r\n          success: false,\r\n          status: 'Not found'\r\n        };\r\n      }\r\n      else if (response.status === 401 || response.status === 403) {\r\n        return {\r\n          success: false,\r\n          status: 'Unauthorized'\r\n        };\r\n      }\r\n      return {\r\n        success: false,\r\n        status: 'Error',\r\n        data: []\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nfunction getLedger(token, year, month) {\r\n  var getUrl = this.getServerUrl() + '/api/ledger/get?year=' + year + '&month=' + month;\r\n  var authHeader = new Headers({\r\n    'Authorization': 'Bearer ' + token\r\n  });\r\n\r\n  return fetch(getUrl, { headers: authHeader }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json().then((data) => {\r\n        return {\r\n          success: true,\r\n          data: data\r\n        };\r\n      });\r\n    }\r\n    else {\r\n      if (response.status === 401 || response.status === 403) {\r\n        return {\r\n          success: false,\r\n          status: 'Unauthorized'\r\n        };\r\n      }\r\n      else if (response.status === 404) {\r\n        return {\r\n          success: false,\r\n          status: 'Not found'\r\n        };\r\n      }\r\n      return {\r\n        success: false,\r\n        status: 'Error',\r\n        data: {\r\n          \"Id\": \"\",\r\n          \"Owner\": \"\",\r\n          \"Type\": \"\",\r\n          \"Month\": \"\",\r\n          \"Year\": \"\",\r\n          \"Debits\": [\r\n          ],\r\n          \"DebitTotal\": \"\",\r\n          \"Credits\": [\r\n          ],\r\n          \"CreditTotal\": \"\"\r\n        }\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nfunction addLedger(token, ledger) {\r\n  var addUrl = this.getServerUrl() + '/api/ledger/add';\r\n  var authHeader = new Headers({\r\n    'Authorization': 'Bearer ' + token,\r\n    'Content-Type': 'application/json'\r\n  });\r\n\r\n  return fetch(addUrl, {\r\n    method: 'POST',\r\n    headers: authHeader,\r\n    body: JSON.stringify(ledger)\r\n  })\r\n  .then((response) => {\r\n    if (response.ok) {\r\n      return {\r\n        success: true\r\n      };\r\n    }\r\n    else {\r\n      if (response.status === 401 || response.status === 403) {\r\n        return {\r\n          success: false,\r\n          status: 'Unauthorized'\r\n        };\r\n      }\r\n      return {\r\n        success: false,\r\n        status: 'Error'\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nfunction updateLedger(token, ledger) {\r\n  var updateUrl = this.getServerUrl() + '/api/ledger/update?id=' + ledger.Id;\r\n  var authHeader = new Headers({\r\n    'Authorization': 'Bearer ' + token,\r\n    'Content-Type': 'application/json'\r\n  });\r\n\r\n  return fetch(updateUrl, {\r\n    method: 'PUT',\r\n    headers: authHeader,\r\n    body: JSON.stringify(ledger)\r\n  })\r\n  .then((response) => {\r\n    if (response.ok) {\r\n      return {\r\n        success: true\r\n      };\r\n    }\r\n    else {\r\n      if (response.status === 401 || response.status === 403) {\r\n        return {\r\n          success: false,\r\n          status: 'Unauthorized'\r\n        };\r\n      }\r\n      return {\r\n        success: false,\r\n        status: 'Error'\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nfunction deleteLedger(token, ledger) {\r\n  var deleteUrl = this.getServerUrl() + '/api/ledger/delete?id=' + ledger.Id;\r\n  var authHeader = new Headers({\r\n    'Authorization': 'Bearer ' + token,\r\n    'Content-Type': 'application/json'\r\n  });\r\n\r\n  return fetch(deleteUrl, {\r\n    method: 'DELETE',\r\n    headers: authHeader\r\n  })\r\n  .then((response) => {\r\n    if (response.ok) {\r\n      return {\r\n        success: true\r\n      };\r\n    }\r\n    else {\r\n      if (response.status === 401 || response.status === 403) {\r\n        return {\r\n          success: false,\r\n          status: 'Unauthorized'\r\n        };\r\n      }\r\n      return {\r\n        success: false,\r\n        status: 'Error'\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nexport default {\r\n  getServerUrl,\r\n  listLedgers,\r\n  getLedger,\r\n  addLedger,\r\n  updateLedger,\r\n  deleteLedger\r\n};\r\n","import React, { Component } from 'react';\r\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\r\nimport { Text } from 'office-ui-fabric-react/lib/Text';\r\nimport { Dropdown } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { List } from 'office-ui-fabric-react/lib/List';\r\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport ledgerConnector from './../utils/ledgerConnector.js';\r\nimport authUtils from './../utils/authUtils.js';\r\n\r\nclass LedgerList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateLedgerList = this.updateLedgerList.bind(this);\r\n    this.addLedger = this.addLedger.bind(this);\r\n    this.showFixed = this.showFixed.bind(this);\r\n    this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    this.renderCell = this.renderCell.bind(this);\r\n\r\n    this.selectionHandler = this.props.selectHandler;\r\n    this.loginHandler = this.props.loginHandler;\r\n    this.months = ['', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    this.ledgers = [];\r\n    this.commandItems = [\r\n      {\r\n        key: 'new',\r\n        text: 'New item',\r\n        iconProps: { iconName: 'Add' },\r\n        onClick: this.addLedger\r\n      }\r\n    ];\r\n    this.farItems = [\r\n      {\r\n        key: 'fixed',\r\n        text: 'Fixed',\r\n        iconProps: { iconName: 'Calendar' },\r\n        onClick: this.showFixed\r\n      },\r\n      {\r\n        key: 'refresh',\r\n        text: 'Refresh',\r\n        ariaLabel: 'Refresh',\r\n        iconOnly: true,\r\n        iconProps: { iconName: 'Refresh' },\r\n        onClick: this.updateLedgerList\r\n      }\r\n    ];\r\n    this.state = {\r\n      dropdownOptions: [],\r\n      displayedLedgers: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateLedgerList();\r\n  }\r\n\r\n  configureDropdown() {\r\n    let years = [];\r\n    for (let i = 0; i < this.ledgers.length; i++) {\r\n      if (years.indexOf(this.ledgers[i]) === -1) {\r\n        years.push(parseInt(this.ledgers[i]));\r\n      }\r\n    }\r\n    // this.ledgers.foreach((value, index, arr) => {\r\n    //   if (years.indexOf(value) === -1) {\r\n    //     years.push(parseInt(value));\r\n    //   }\r\n    // });\r\n    years.sort((a, b) => b - a); // Descending\r\n\r\n    let options = [];\r\n    for (let i = 0; i < years.length; i++) {\r\n      options.push({ key: years[i], text: years[i] });\r\n    }\r\n    // years.foreach((value, index, arr) => {\r\n    //   options.push({ key: value, text: value });\r\n    // });\r\n    this.setState({\r\n      dropdownOptions: options\r\n    });\r\n  }\r\n\r\n  updateLedgerList() {\r\n    ledgerConnector.listLedgers(authUtils.getToken()).then((result) => {\r\n      if (result.success) {\r\n        this.ledgers = result.data;\r\n        this.ledgers.sort(this.sortLedgers);\r\n        this.setState({\r\n          displayedLedgers: this.ledgers\r\n        });\r\n        this.configureDropdown();\r\n      }\r\n      else {\r\n        if (result.status === 'Unauthorized') {\r\n          this.loginHandler();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  showFixed() {\r\n    // TODO\r\n  }\r\n\r\n  filterByYear(year) {\r\n    return this.ledgers.filter((item) => {\r\n      return item.Year == year;\r\n    });\r\n  }\r\n\r\n  sortLedgers(a, b) {\r\n    if (a.Year !== b.Year) {\r\n      return b.Year - a.Year;\r\n    }\r\n    return b.Month - a.Month;\r\n  }\r\n\r\n  addLedger() {\r\n    let date = new Date();\r\n    let latestYear = date.getFullYear();\r\n    let latestMonth = date.getMonth() + 1;\r\n\r\n    if (this.ledgers.length > 0) {\r\n      latestYear = parseInt(this.ledgers[0].Year);\r\n      latestMonth = parseInt(this.ledgers[0].Month);\r\n\r\n      latestMonth++;\r\n      if (latestMonth === 13) {\r\n        latestYear++;\r\n        latestMonth = 1;\r\n      }\r\n    }\r\n\r\n    this.selectionHandler({\r\n      target: {\r\n        dataset: {\r\n          year: latestYear,\r\n          month: latestMonth\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  onChangeHandler(event, item) {\r\n    this.setState({\r\n      displayedLedgers: this.filterByYear(item.value).sort(this.sortLedgers)\r\n    });\r\n  }\r\n\r\n  renderCell(item, index) {\r\n    return (\r\n      <div className=\"list-item\" onClick={this.selectionHandler} data-year={item.Year} data-month={item.Month}>\r\n        <Text data-year={item.Year} data-month={item.Month}>{`${item.Year} ${this.months[item.Month]}`}</Text>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div data-is-scrollable=\"true\">\r\n        <Stack>\r\n          <Dropdown placeholder=\"Filter by year\" options={this.state.dropdownOptions} onChange={this.onChangeHandler} />\r\n          <CommandBar\r\n            items={this.commandItems}\r\n            farItems={this.farItems}\r\n            ariaLabel=\"\"\r\n          />\r\n          <List items={this.state.displayedLedgers} onRenderCell={this.renderCell} />\r\n        </Stack>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LedgerList;\r\n","import React, { Component } from 'react';\r\nimport { MessageBar, MessageBarType, DefaultPalette } from 'office-ui-fabric-react';\r\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\r\nimport { Label } from 'office-ui-fabric-react/lib/Label';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Pivot, PivotItem } from 'office-ui-fabric-react/lib/Pivot';\r\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { DetailsList, SelectionMode, DetailsListLayoutMode } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport ledgerConnector from '../utils/ledgerConnector.js';\r\nimport authUtils from './../utils/authUtils.js';\r\n\r\nclass LedgerDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.save = this.save.bind(this);\r\n    this.addItem = this.addItem.bind(this);\r\n    this.handleTabClick = this.handleTabClick.bind(this);\r\n    this.renderItemColumn = this.renderItemColumn.bind(this);\r\n    this.onChangeHandler = this.onChangeHandler.bind(this);\r\n\r\n    this.loginHandler = this.props.loginHandler;\r\n    this.backToList = this.props.returnHandler;\r\n    this.parameters = {\r\n      year: this.props.selection.year,\r\n      month: this.props.selection.month\r\n    };\r\n    this.newLedger = false;\r\n    this.displayprops = {\r\n      columns: [\r\n        {\r\n          key: 'item',\r\n          name: 'Item',\r\n          fieldName: 'Label',\r\n          isPadded: true\r\n        },\r\n        {\r\n          key: 'amount',\r\n          name: 'Amount',\r\n          fieldName: 'Amount',\r\n          isPadded: true\r\n        },\r\n      ],\r\n      stackItemStyles: {\r\n        root: {\r\n          alignItems: 'center',\r\n          justifyContent: 'right',\r\n          display: 'grid'\r\n        }\r\n      }\r\n    }\r\n    this.commandItems = [\r\n      {\r\n        key: 'back',\r\n        text: 'Back',\r\n        ariaLabel: 'Back',\r\n        iconOnly: true,\r\n        iconProps: { iconName: 'Back' },\r\n        onClick: this.backToList\r\n      },\r\n      {\r\n        key: 'new',\r\n        text: 'New item',\r\n        iconProps: { iconName: 'Add' },\r\n        onClick: this.addItem\r\n      }\r\n    ];\r\n    this.farItems = [\r\n      {\r\n        key: 'save',\r\n        text: 'Save',\r\n        ariaLabel: 'Save',\r\n        iconOnly: true,\r\n        iconProps: { iconName: 'CheckMark' },\r\n        onClick: this.save\r\n      }\r\n    ];\r\n    this.state = {\r\n      ledger: {\r\n        Type: \"regular\",\r\n        Month: this.parameters.month,\r\n        Year: this.parameters.year,\r\n        Debits: [],\r\n        DebitTotal: \"\",\r\n        Credits: [],\r\n        CreditTotal: \"\"\r\n      },\r\n      selectedTab: 'Debits',\r\n      saveSuccess: false,\r\n      saveFailed: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLedgerDetails();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.selection.Year !== prevProps.selection.Year &&\r\n        this.props.selection.Month !== prevProps.selection.Month) {\r\n      this.getLedgerDetails();\r\n    }\r\n  }\r\n\r\n  getLedgerDetails() {\r\n    console.log(`Loading ${this.parameters.year}/${this.parameters.month}`);\r\n    ledgerConnector.getLedger(authUtils.getToken(), this.parameters.year, this.parameters.month).then((result) => {\r\n      if (result.success) {\r\n        this.setState({\r\n          ledger: result.data\r\n        });\r\n      }\r\n      else {\r\n        if (result.status === 'Not found') {\r\n          console.log('No data found. New ledger will be created');\r\n          this.newLedger = true;\r\n        }\r\n        else if (result.status === 'Unauthorized') {\r\n          this.loginHandler();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  addItem() {\r\n    console.log(`Adding new item to ${this.state.selectedTab}`);\r\n\r\n    this.setState(prevState => ({\r\n      ledger: {\r\n        ...prevState.ledger,\r\n        [this.state.selectedTab]: prevState.ledger[this.state.selectedTab].concat({\r\n          Label: '',\r\n          Amount: ''\r\n        })\r\n      }\r\n    }));\r\n  }\r\n\r\n  save() {\r\n    this.setState({\r\n      saveSuccess: false,\r\n      saveFailed: false\r\n    });\r\n    if (this.newLedger) {\r\n      ledgerConnector.addLedger(authUtils.getToken(), this.state.ledger).then((result) => {\r\n        if (result.success) {\r\n          this.setState({\r\n            saveSuccess: true\r\n          });\r\n        }\r\n        else {\r\n          this.setState({\r\n            saveFailed: true\r\n          });\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      ledgerConnector.updateLedger(authUtils.getToken(), this.state.ledger).then((result) => {\r\n        if (result.success) {\r\n          this.setState({\r\n            saveSuccess: true\r\n          });\r\n        }\r\n        else {\r\n          this.setState({\r\n            saveFailed: true\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  calculateTotal(total, current) {\r\n    if (current.Amount) {\r\n      return total + parseInt(current.Amount);\r\n    }\r\n    return total;\r\n  }\r\n\r\n  handleTabClick(item) {\r\n    this.setState({\r\n      selectedTab: item.props.itemKey\r\n    });\r\n  }\r\n\r\n  onChangeHandler(event) {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n    const index = parseInt(event.target.dataset.index);\r\n    console.log(`Updating ${name} of item ${index} of ${this.state.selectedTab}`);\r\n\r\n    this.setState(prevState => ({\r\n      ledger: {\r\n        ...prevState.ledger,\r\n        [this.state.selectedTab]: prevState.ledger[this.state.selectedTab].map((el, i) => i === index ? {\r\n          ...el, [name]: value\r\n        } : el)\r\n      }\r\n    }), () => {\r\n      if (this.state.selectedTab === 'Debits') {\r\n        this.setState(prevState => ({\r\n          ledger: {\r\n            ...prevState.ledger,\r\n            DebitTotal: prevState.ledger.Debits.reduce(this.calculateTotal, 0)\r\n          }\r\n        }));\r\n      }\r\n      else {\r\n        this.setState(prevState => ({\r\n          ledger: {\r\n            ...prevState.ledger,\r\n            CreditTotal: prevState.ledger.Credits.reduce(this.calculateTotal, 0)\r\n          }\r\n        }));\r\n      }\r\n    });\r\n  }\r\n\r\n  renderItemColumn(item, index, column) {\r\n    switch (column.key) {\r\n      case 'item':\r\n        return <TextField ariaLabel=\"Item\" name=\"Label\" data-index={index} value={this.state.ledger[this.state.selectedTab][index].Label} onChange={this.onChangeHandler} />;\r\n\r\n      case 'amount':\r\n        return <TextField ariaLabel=\"Amount\" name=\"Amount\" type=\"number\" data-index={index} value={this.state.ledger[this.state.selectedTab][index].Amount} onChange={this.onChangeHandler} />;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.saveSuccess &&\r\n          <MessageBar messageBarType={MessageBarType.success} isMultiline={false}>\r\n            Saved\r\n          </MessageBar>\r\n        }\r\n        {\r\n          this.state.saveFailed &&\r\n          <MessageBar messageBarType={MessageBarType.error} isMultiline={false}>\r\n            Could not save. Please try again.\r\n          </MessageBar>\r\n        }\r\n        <CommandBar\r\n          items={this.commandItems}\r\n          farItems={this.farItems}\r\n          ariaLabel=\"\"\r\n        />\r\n        <Pivot\r\n            selectedKey={this.state.selectedTab}\r\n            onLinkClick={this.handleTabClick}\r\n            styles={{ link: {width:\"50%\"}, linkIsSelected: {width:\"50%\"} }}>\r\n          <PivotItem headerText=\"Expenses\" itemKey=\"Debits\">\r\n            <div data-is-scrollable=\"true\">\r\n              <DetailsList\r\n                items={this.state.ledger.Debits}\r\n                columns={this.displayprops.columns}\r\n                selectionMode={SelectionMode.none}\r\n                layoutMode={DetailsListLayoutMode.justified}\r\n                isHeaderVisible={true}\r\n                onRenderItemColumn={this.renderItemColumn}\r\n              />\r\n              <Stack horizontal horizontalAlign=\"end\" tokens={{ childrenGap: 10, padding: 32 }}>\r\n              <Stack.Item grow={5} styles={this.displayprops.stackItemStyles}>\r\n                  Total\r\n                </Stack.Item>\r\n                <Stack.Item grow styles={this.displayprops.stackItemStyles}>\r\n                  {this.state.ledger.DebitTotal}\r\n                </Stack.Item>\r\n              </Stack>\r\n            </div>\r\n          </PivotItem>\r\n          <PivotItem headerText=\"Income\" itemKey=\"Credits\">\r\n            <div data-is-scrollable=\"true\">\r\n              <DetailsList\r\n                items={this.state.ledger.Credits}\r\n                columns={this.displayprops.columns}\r\n                selectionMode={SelectionMode.none}\r\n                layoutMode={DetailsListLayoutMode.justified}\r\n                isHeaderVisible={true}\r\n                onRenderItemColumn={this.renderItemColumn}\r\n              />\r\n              <Stack horizontal horizontalAlign=\"end\" tokens={{ childrenGap: 10, padding: 32 }}>\r\n                <Stack.Item grow={5} styles={this.displayprops.stackItemStyles}>\r\n                  Total\r\n                </Stack.Item>\r\n                <Stack.Item grow styles={this.displayprops.stackItemStyles}>\r\n                  {this.state.ledger.CreditTotal}\r\n                </Stack.Item>\r\n              </Stack>\r\n            </div>\r\n          </PivotItem>\r\n        </Pivot>\r\n        <Stack horizontal horizontalAlign=\"end\" tokens={{ childrenGap: 10, padding: 32 }}>\r\n          <Stack.Item grow={5} styles={this.displayprops.stackItemStyles}>\r\n            <b>Net</b>\r\n          </Stack.Item>\r\n          <Stack.Item grow styles={this.displayprops.stackItemStyles}>\r\n            <b>{this.state.ledger.CreditTotal - this.state.ledger.DebitTotal}</b>\r\n          </Stack.Item>\r\n        </Stack>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LedgerDetails;\r\n","import React, { Component } from 'react';\nimport { Text } from 'office-ui-fabric-react/lib/Text';\nimport { CSSTransition } from 'react-transition-group';\nimport AuthScreen from './components/AuthScreen.js';\nimport LedgerList from './components/LedgerList.js';\nimport LedgerDetails from './components/LedgerDetails.js';\nimport './css/App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.loginHandler = this.loginHandler.bind(this);\n    this.selectionHandler = this.selectionHandler.bind(this);\n    this.backToList = this.backToList.bind(this);\n    this.loggedIn = this.loggedIn.bind(this);\n\n    this.state = {\n      title: 'Ledgers',\n      showLedgerList: true,\n      showLedger: false,\n      showLogin: false,\n      selectedLedger: {\n        year: '',\n        month: ''\n      }\n    };\n    this.months = ['', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  }\n\n  loginHandler() {\n    this.origin = this.state.title;\n    this.setState({\n      title: 'Sign in',\n      showLedgerList: false,\n      showLedger: false,\n      showLogin: true\n    });\n  }\n\n  loggedIn() {\n    if (this.origin === 'Ledgers') {\n      this.setState({\n        title: 'Ledgers',\n        showLedgerList: true,\n        showLedger: false,\n        showLogin: false\n      });\n    }\n    else {\n      this.setState({\n        title: this.origin,\n        showLedgerList: false,\n        showLedger: true,\n        showLogin: false\n      });\n    }\n  }\n\n  selectionHandler(event) {\n    let year = event.target.dataset.year;\n    let month = event.target.dataset.month;\n\n    this.setState({\n      title: `${year} ${this.months[month]}`\n    });\n    this.setState({\n      selectedLedger: {\n        year: year,\n        month: month\n      }\n    });\n    this.setState({\n      showLedgerList: false,\n      showLedger: true,\n      showLogin: false\n    });\n  }\n\n  backToList() {\n    this.setState({\n      title: 'Ledgers',\n      showLedgerList: true,\n      showLedger: false,\n      showLogin: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"ms-Grid\" dir=\"ltr\">\n        <div className=\"ms-Grid-row header\">\n          <div className=\"ms-Grid-col ms-sm12 align-center\">\n            <Text variant={'large'}>{this.state.title}</Text>\n          </div>\n        </div>\n        <CSSTransition in={this.state.showLedgerList} timeout={200} classNames=\"ledgerList\" mountOnEnter unmountOnExit>\n          <LedgerList selectHandler={this.selectionHandler} loginHandler={this.loginHandler} />\n        </CSSTransition>\n        <CSSTransition in={this.state.showLedger} timeout={200} classNames=\"ledgerDetails\" mountOnEnter unmountOnExit>\n          <LedgerDetails selection={this.state.selectedLedger} loginHandler={this.loginHandler} returnHandler={this.backToList} />\n        </CSSTransition>\n        <CSSTransition in={this.state.showLogin} timeout={200} classNames=\"authScreen\" mountOnEnter unmountOnExit>\n          <AuthScreen completionCallback={this.loggedIn} />\n        </CSSTransition>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/workers/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\nimport './css/index.css';\nimport '../node_modules/office-ui-fabric-react/dist/css/fabric.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\ninitializeIcons();\n\nReactDOM.render(\n  <Fabric>\n    <App />\n  </Fabric>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}