{"version":3,"sources":["utils/authConnector.js","utils/authUtils.js","components/AuthScreen.js","utils/ledgerConnector.js","workers/syncWorker.js","components/LedgerList.js","components/LedgerDetails.js","App.js","workers/service-worker.js","serviceWorker.js","index.js"],"names":["getServerUrl","isReachable","fetch","this","method","mode","then","resp","catch","err","login","username","password","url","headers","body","JSON","stringify","UserName","Password","response","ok","json","data","success","accessToken","refreshToken","register","renew","getToken","localStorage","getItem","saveToken","setItem","AuthSceen","props","loggedIn","completionCallback","useState","showLogin","setShowLogin","showRegister","setShowRegister","showSpinner","setShowSpinner","regSuccess","setRegSuccess","regFailed","setRegFailed","loginFailed","setLoginFailed","LoginUserName","setLoginUserName","LoginPassword","setLoginPassword","RegUserName","setRegUserName","RegPassword","setRegPassword","RegPasswordVerify","setRegPasswordVerify","onSubmit","event","preventDefault","authConnector","result","authUtils","Stack","tokens","childrenGap","horizontalAlign","MessageBar","messageBarType","MessageBarType","isMultiline","error","TextField","label","value","onChange","e","target","required","type","horizontal","verticalAlign","PrimaryButton","text","Spinner","size","SpinnerSize","small","Link","onClick","onGetErrorMessage","db","listLedgers","token","getUrl","authHeader","Headers","status","getLedger","year","month","addLedger","ledger","addUrl","updateLedger","updateUrl","Id","deleteLedger","deleteUrl","LedgerList","selectionHandler","selectHandler","loginHandler","months","ledgers","useRef","dropdownOptions","setDropdownOptions","displayedLedgers","setDisplayedLedgers","sortLedgers","a","b","Year","Month","updateLedgerList","ledgerConnector","current","filter","item","Type","sort","years","i","length","indexOf","push","parseInt","options","key","configureDropdown","useEffect","commandItems","iconProps","iconName","date","Date","latestYear","getFullYear","latestMonth","getMonth","dataset","farItems","ariaLabel","iconOnly","data-is-scrollable","Dropdown","placeholder","CommandBar","items","medium","List","onRenderCell","index","className","data-year","data-month","Text","calculateTotal","total","Amount","ledgerReducer","state","action","Debits","concat","Label","debitTotal","Credits","creditTotal","DebitTotal","CreditTotal","book","newCredits","map","el","field","reduce","newDebits","console","log","splice","Error","LedgerDetails","backToList","returnHandler","parameters","selection","newLedger","useReducer","dispatchLedger","selectedTab","setSelectedTab","saveSuccess","setSaveSuccess","saveFailed","setSaveFailed","dataLoaded","setDataLoaded","getLedgerDetails","populateFixedItems","onChangeHandler","name","renderItemColumn","column","data-index","IconButton","title","deleteItem","displayprops","columns","fieldName","maxWidth","stackItemStyles","root","alignItems","justifyContent","display","Pivot","selectedKey","onLinkClick","itemKey","styles","link","width","linkIsSelected","PivotItem","headerText","ShimmeredDetailsList","selectionMode","SelectionMode","none","layoutMode","DetailsListLayoutMode","justified","isHeaderVisible","enableShimmer","onRenderItemColumn","padding","Item","grow","App","setTitle","showLedgerList","setShowLedgerList","showLedger","setShowLedger","selectedLedger","setSelectedLedger","origin","retryFunc","dir","variant","CSSTransition","in","timeout","classNames","mountOnEnter","unmountOnExit","AuthScreen","dbRequest","window","indexedDB","open","onsuccess","onerror","onupgradeneeded","objectStore","createObjectStore","autoIncrement","createIndex","unique","serverUrl","isOnline","handleConnection","navigator","onLine","online","addEventListener","setInterval","transaction","openCursor","cursor","serverUpd","parse","UpdatedAt","postMessage","delete","continue","onmessage","add","appShellFiles","syncWorker","waitUntil","caches","cache","addAll","respondWith","request","put","clone","match","r","Response","keys","keyList","Promise","all","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initializeIcons","ReactDOM","render","Fabric","document","getElementById","URL","process","href","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.92fd1401.chunk.js","sourcesContent":["function getServerUrl() {\r\n  return 'https://fintrack-image-occpy2fuaa-an.a.run.app';\r\n}\r\n\r\nfunction isReachable() {\r\n  return fetch(this.getServerUrl(), { method: 'HEAD', mode: 'no-cors' })\r\n    .then((resp) => {\r\n      return true;\r\n    })\r\n    .catch((err) => {\r\n      return false;\r\n    });\r\n}\r\n\r\nfunction login(username, password) {\r\n  var url = this.getServerUrl() + '/api/user/login';\r\n\r\n  return fetch(url, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ UserName: username, Password: password })\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json().then((data) => {\r\n        return {\r\n          success: true,\r\n          accessToken: data.accessToken,\r\n          refreshToken: data.refreshToken\r\n        };\r\n      });\r\n    }\r\n    else {\r\n      return {\r\n        success: false\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nfunction register(username, password) {\r\n  var url = this.getServerUrl() + '/api/user/register';\r\n\r\n  return fetch(url, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ UserName: username, Password: password })\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json().then((data) => {\r\n        return {\r\n          success: true,\r\n          accessToken: data.accessToken,\r\n          refreshToken: data.refreshToken\r\n        };\r\n      });\r\n    }\r\n    else {\r\n      return {\r\n        success: false\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nfunction renew(refreshToken) {\r\n  var url = this.getServerUrl() + '/api/user/renew';\r\n\r\n  return fetch(url, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: `\"${refreshToken}\"`\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json().then((data) => {\r\n        return {\r\n          success: true,\r\n          accessToken: data.accessToken\r\n        };\r\n      });\r\n    }\r\n    else {\r\n      return {\r\n        success: false\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nexport default {\r\n  getServerUrl,\r\n  isReachable,\r\n  login,\r\n  register,\r\n  renew\r\n};\r\n","function getToken() {\r\n  return {\r\n    accessToken: localStorage.getItem('accessToken'),\r\n    refreshToken: localStorage.getItem('refreshToken')\r\n  };\r\n}\r\n\r\nfunction saveToken(accessToken, refreshToken) {\r\n  localStorage.setItem('accessToken', accessToken);\r\n  localStorage.setItem('refreshToken', refreshToken);\r\n}\r\n\r\nexport default {\r\n  getToken,\r\n  saveToken\r\n};","import React, { useState } from 'react';\r\nimport { PrimaryButton, MessageBar, MessageBarType } from 'office-ui-fabric-react';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\r\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport authConnector from '../utils/authConnector.js';\r\nimport authUtils from '../utils/authUtils.js';\r\n\r\nconst AuthSceen = (props) => {\r\n  const loggedIn = props.completionCallback;\r\n\r\n  const [showLogin, setShowLogin] = useState(true);\r\n  const [showRegister, setShowRegister] = useState(false);\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n  const [regSuccess, setRegSuccess] = useState(false);\r\n  const [regFailed, setRegFailed] = useState(false);\r\n  const [loginFailed, setLoginFailed] = useState(false);\r\n  const [LoginUserName, setLoginUserName] = useState('');\r\n  const [LoginPassword, setLoginPassword] = useState('');\r\n  const [RegUserName, setRegUserName] = useState('');\r\n  const [RegPassword, setRegPassword] = useState('');\r\n  const [RegPasswordVerify, setRegPasswordVerify] = useState('');\r\n\r\n  const loginPage = () => {\r\n    setShowLogin(true);\r\n    setShowRegister(false);\r\n    setRegSuccess(false);\r\n    setRegFailed(false);\r\n    setLoginFailed(false);\r\n  }\r\n\r\n  const registerPage = () => {\r\n    setShowLogin(false);\r\n    setShowRegister(true);\r\n    setRegSuccess(false);\r\n    setRegFailed(false);\r\n    setLoginFailed(false);\r\n  }\r\n\r\n  const verifyPassword = (value) => {\r\n    return value === RegPassword ? '' : 'Passwords do not match';\r\n  }\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault();\r\n\r\n    setShowSpinner(true);\r\n    authConnector.login(LoginUserName, LoginPassword).then((result) => {\r\n      setShowSpinner(false);\r\n      if (result.success) {\r\n        authUtils.saveToken(result.accessToken, result.refreshToken);\r\n        setRegSuccess(false);\r\n        setLoginFailed(false);\r\n        loggedIn();\r\n      }\r\n      else {\r\n        setRegSuccess(false);\r\n        setLoginFailed(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleRegister = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (RegPassword !== RegPasswordVerify) {\r\n      return;\r\n    }\r\n\r\n    setShowSpinner(true);\r\n    authConnector.register(LoginUserName, LoginPassword).then((result) => {\r\n      setShowSpinner(false);\r\n      if (result.success) {\r\n        authUtils.saveToken(result.accessToken, result.refreshToken);\r\n        setShowLogin(true);\r\n        setShowRegister(false);\r\n        setRegSuccess(false);\r\n        setRegFailed(false);\r\n        loggedIn();\r\n      }\r\n      else {\r\n        setRegFailed(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        showLogin &&\r\n        <form onSubmit={handleLogin}>\r\n          <Stack tokens={{ childrenGap: 10 }} horizontalAlign=\"center\">\r\n            {\r\n              regSuccess &&\r\n              <MessageBar messageBarType={MessageBarType.success} isMultiline={false}>\r\n                Registration successful\r\n              </MessageBar>\r\n            }\r\n            {\r\n              loginFailed &&\r\n              <MessageBar messageBarType={MessageBarType.error} isMultiline={false}>\r\n                The username and password do not match\r\n              </MessageBar>\r\n            }\r\n            <TextField label=\"User name\" value={LoginUserName} onChange={(e) => setLoginUserName(e.target.value)} required />\r\n            <TextField label=\"Password\" value={LoginPassword} onChange={(e) => setLoginPassword(e.target.value)} type=\"password\" required />\r\n            <Stack horizontal tokens={{ childrenGap: 10 }} verticalAlign=\"center\">\r\n              <PrimaryButton text=\"Login\" type=\"submit\" />\r\n              { showSpinner && <Spinner size={SpinnerSize.small} /> }\r\n            </Stack>\r\n            <Link onClick={registerPage}>Click here to register</Link>\r\n          </Stack>\r\n        </form>\r\n      }\r\n      {\r\n        showRegister &&\r\n        <form onSubmit={handleRegister}>\r\n          <Stack tokens={{ childrenGap: 10 }} horizontalAlign=\"center\">\r\n            {\r\n              regFailed &&\r\n              <MessageBar messageBarType={MessageBarType.error} isMultiline={false}>\r\n                The username and password do not match.\r\n              </MessageBar>\r\n            }\r\n            <TextField label=\"User name\" value={RegUserName} onChange={(e) => setRegUserName(e.target.value)} required />\r\n            <TextField label=\"Password\" type=\"password\" value={RegPassword} onChange={(e) => setRegPassword(e.target.value)} required />\r\n            <TextField label=\"Verify password\" type=\"password\" value={RegPasswordVerify} onChange={(e) => setRegPasswordVerify(e.target.value)} onGetErrorMessage={verifyPassword} required />\r\n            <Stack horizontal tokens={{ childrenGap: 10 }} verticalAlign=\"center\">\r\n              <PrimaryButton text=\"Register\" type=\"submit\" />\r\n              { showSpinner && <Spinner size={SpinnerSize.small} /> }\r\n            </Stack>\r\n            <Link onClick={loginPage}>Return to login</Link>\r\n          </Stack>\r\n        </form>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthSceen;\r\n","function getServerUrl() {\r\n  return 'https://fintrack-image-occpy2fuaa-an.a.run.app';\r\n}\r\n\r\nfunction listLedgers(token) {\r\n  var getUrl = this.getServerUrl() + '/api/ledger/list';\r\n\r\n  var authHeader = new Headers({\r\n    'Authorization': 'Bearer ' + token\r\n  });\r\n\r\n  return fetch(getUrl, { headers: authHeader }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json().then((data) => {\r\n        return {\r\n          success: true,\r\n          data: data\r\n        };\r\n      });\r\n    }\r\n    else {\r\n      if (response.status === 404) {\r\n        return {\r\n          success: false,\r\n          status: 'Not found'\r\n        };\r\n      }\r\n      else if (response.status === 401 || response.status === 403) {\r\n        return {\r\n          success: false,\r\n          status: 'Unauthorized'\r\n        };\r\n      }\r\n      return {\r\n        success: false,\r\n        status: 'Error',\r\n        data: []\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nfunction getLedger(token, year, month) {\r\n  var getUrl = this.getServerUrl() + '/api/ledger/get?year=' + year + '&month=' + month;\r\n  var authHeader = new Headers({\r\n    'Authorization': 'Bearer ' + token\r\n  });\r\n\r\n  return fetch(getUrl, { headers: authHeader }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json().then((data) => {\r\n        return {\r\n          success: true,\r\n          data: data\r\n        };\r\n      });\r\n    }\r\n    else {\r\n      if (response.status === 401 || response.status === 403) {\r\n        return {\r\n          success: false,\r\n          status: 'Unauthorized'\r\n        };\r\n      }\r\n      else if (response.status === 404) {\r\n        return {\r\n          success: false,\r\n          status: 'Not found'\r\n        };\r\n      }\r\n      return {\r\n        success: false,\r\n        status: 'Error',\r\n        data: {\r\n          \"Id\": \"\",\r\n          \"Owner\": \"\",\r\n          \"Type\": \"\",\r\n          \"Month\": \"\",\r\n          \"Year\": \"\",\r\n          \"Debits\": [\r\n          ],\r\n          \"DebitTotal\": \"\",\r\n          \"Credits\": [\r\n          ],\r\n          \"CreditTotal\": \"\"\r\n        }\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nfunction addLedger(token, ledger) {\r\n  var addUrl = this.getServerUrl() + '/api/ledger/add';\r\n  var authHeader = new Headers({\r\n    'Authorization': 'Bearer ' + token,\r\n    'Content-Type': 'application/json'\r\n  });\r\n\r\n  return fetch(addUrl, {\r\n    method: 'POST',\r\n    headers: authHeader,\r\n    body: JSON.stringify(ledger)\r\n  })\r\n  .then((response) => {\r\n    if (response.ok) {\r\n      return {\r\n        success: true\r\n      };\r\n    }\r\n    else {\r\n      if (response.status === 401 || response.status === 403) {\r\n        return {\r\n          success: false,\r\n          status: 'Unauthorized'\r\n        };\r\n      }\r\n      return {\r\n        success: false,\r\n        status: 'Error'\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nfunction updateLedger(token, ledger) {\r\n  var updateUrl = this.getServerUrl() + '/api/ledger/update?id=' + ledger.Id;\r\n  var authHeader = new Headers({\r\n    'Authorization': 'Bearer ' + token,\r\n    'Content-Type': 'application/json'\r\n  });\r\n\r\n  return fetch(updateUrl, {\r\n    method: 'PUT',\r\n    headers: authHeader,\r\n    body: JSON.stringify(ledger)\r\n  })\r\n  .then((response) => {\r\n    if (response.ok) {\r\n      return {\r\n        success: true\r\n      };\r\n    }\r\n    else {\r\n      if (response.status === 401 || response.status === 403) {\r\n        return {\r\n          success: false,\r\n          status: 'Unauthorized'\r\n        };\r\n      }\r\n      return {\r\n        success: false,\r\n        status: 'Error'\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nfunction deleteLedger(token, ledger) {\r\n  var deleteUrl = this.getServerUrl() + '/api/ledger/delete?id=' + ledger.Id;\r\n  var authHeader = new Headers({\r\n    'Authorization': 'Bearer ' + token,\r\n    'Content-Type': 'application/json'\r\n  });\r\n\r\n  return fetch(deleteUrl, {\r\n    method: 'DELETE',\r\n    headers: authHeader\r\n  })\r\n  .then((response) => {\r\n    if (response.ok) {\r\n      return {\r\n        success: true\r\n      };\r\n    }\r\n    else {\r\n      if (response.status === 401 || response.status === 403) {\r\n        return {\r\n          success: false,\r\n          status: 'Unauthorized'\r\n        };\r\n      }\r\n      return {\r\n        success: false,\r\n        status: 'Error'\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nexport default {\r\n  getServerUrl,\r\n  listLedgers,\r\n  getLedger,\r\n  addLedger,\r\n  updateLedger,\r\n  deleteLedger\r\n};\r\n","import authUtils from './../utils/authUtils.js';\r\nimport authConnector from './../utils/authConnector.js';\r\nimport ledgerConnector from './../utils/ledgerConnector.js';\r\n\r\n// IndexedDB setup\r\nvar db;\r\nvar dbRequest = window.indexedDB.open('FinTrackDB', 1);\r\ndbRequest.onsuccess = (event) => {\r\n  db = event.target.result;\r\n};\r\ndbRequest.onerror = (event) => {\r\n  console.log(\"Unable to use IndexedDB\");\r\n};\r\ndbRequest.onupgradeneeded = (event) => {\r\n  db = event.target.result;\r\n\r\n  var objectStore = db.createObjectStore('ledgers', { autoIncrement : true });\r\n  objectStore.createIndex('Id', 'Id', { unique: false });\r\n  objectStore.createIndex('Year', 'Year', { unique: false });\r\n  objectStore.createIndex('Month', 'Month', { unique: false });\r\n};\r\n\r\n// Online offline handlers\r\nvar serverUrl = ledgerConnector.getServerUrl();\r\nvar isOnline = true;\r\nwindow.addEventListener('online', handleConnection);\r\nwindow.addEventListener('offline', handleConnection);\r\n\r\nfunction handleConnection() {\r\n  if (navigator.onLine) {\r\n    authConnector.isReachable(serverUrl).then((online) => {\r\n      if (online) {\r\n        console.log('Client online');\r\n        isOnline = true;\r\n      } else {\r\n        console.log('No connectivity');\r\n        isOnline = false;\r\n      }\r\n    });\r\n  } else {\r\n    console.log('Client offline');\r\n    isOnline = false;\r\n  }\r\n}\r\n\r\n// Worker core\r\nvar { accessToken } = authUtils.getToken();\r\nfunction onmessage(e) {\r\n  var objectStore = db.transaction(['ledgers'], 'readwrite').objectStore('ledgers');\r\n  objectStore.add(e.data);\r\n}\r\n\r\nsetInterval(sync, 10000);\r\n\r\nfunction sync() {\r\n  if (isOnline) {\r\n    var objectStore = db.transaction('ledgers').objectStore('ledgers');\r\n    objectStore.openCursor().onsuccess = (e) => {\r\n      var cursor = e.target.result;\r\n      if (cursor) {\r\n        console.log('Syncing entry ' + cursor.value.key);\r\n        syncLedger(cursor.value).then((result) => {\r\n          if (result) {\r\n            console.log('Entry ' + cursor.value.key + ' synced');\r\n            console.log('Deleting entry ' + cursor.value.key);\r\n            db.transaction('ledgers', 'readwrite').objectStore('ledgers').delete(cursor.value.key).onsuccess = () => true;\r\n          }\r\n        }).then((result) => {\r\n          console.log('Delete complete');\r\n          cursor.continue();\r\n        }).catch(() => {\r\n          console.log('Syncing failed for entry ' + cursor.value.key);\r\n          cursor.continue();\r\n        });\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nfunction syncLedger(ledger) {\r\n  ledgerConnector.getLedger(accessToken, ledger.Year, ledger.Month).then((result) => {\r\n    if (result.success) {\r\n      const serverUpd = Date.parse(result.data.UpdatedAt);\r\n      const localUpd = Date.parse(ledger.UpdatedAt);\r\n      if (localUpd > serverUpd) {\r\n        return updateLedger(ledger).then((result) => {\r\n          return result;\r\n        });\r\n      }\r\n      else {\r\n        return true;\r\n      }\r\n    }\r\n    else {\r\n      if (result.status === 'Unauthorized') {\r\n        postMessage('Unauthorized');\r\n        return false;\r\n      }\r\n      else if (result.status === 'Not found') {\r\n        return addLedger(ledger).then((result) => {\r\n          return result;\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction updateLedger(ledger) {\r\n  ledgerConnector.updateLedger(accessToken, ledger).then((result) => {\r\n    if (result.success) {\r\n      return true;\r\n    }\r\n    else {\r\n      if (result.status === 'Unauthorized') {\r\n        postMessage('Unauthorized');\r\n      }\r\n      return false;\r\n    }\r\n  });\r\n}\r\n\r\nfunction addLedger(ledger) {\r\n  ledgerConnector.addLedger(accessToken, ledger).then((result) => {\r\n    if (result.success) {\r\n      return true;\r\n    }\r\n    else {\r\n      if (result.status === 'Unauthorized') {\r\n        postMessage('Unauthorized');\r\n      }\r\n      return false;\r\n    }\r\n  });\r\n}\r\n\r\nexport default {\r\n  onmessage\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\r\nimport { Text } from 'office-ui-fabric-react/lib/Text';\r\nimport { Dropdown } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { List } from 'office-ui-fabric-react/lib/List';\r\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\r\nimport ledgerConnector from './../utils/ledgerConnector.js';\r\nimport authUtils from './../utils/authUtils.js';\r\n\r\nconst LedgerList = (props) => {\r\n  const selectionHandler = props.selectHandler;\r\n  const loginHandler = props.loginHandler;\r\n  const months = ['', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\n  const ledgers = useRef([]);\r\n  const [dropdownOptions, setDropdownOptions] = useState([]);\r\n  const [displayedLedgers, setDisplayedLedgers] = useState([]);\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n  const sortLedgers = (a, b) => {\r\n    if (a.Year !== b.Year) {\r\n      return b.Year - a.Year;\r\n    }\r\n    return b.Month - a.Month;\r\n  }\r\n\r\n  const configureDropdown = () => {\r\n    let years = [];\r\n    for (let i = 0; i < ledgers.current.length; i++) {\r\n      if (years.indexOf(ledgers.current[i].Year) === -1) {\r\n        years.push(parseInt(ledgers.current[i].Year));\r\n      }\r\n    }\r\n    years.sort((a, b) => b - a); // Descending\r\n\r\n    let options = [];\r\n    options.push({ key: '', text: '' });\r\n    for (let i = 0; i < years.length; i++) {\r\n      options.push({ key: years[i], text: years[i] });\r\n    }\r\n    setDropdownOptions(options);\r\n  }\r\n\r\n  const updateLedgerList = () => {\r\n    setShowSpinner(true);\r\n    const { accessToken } = authUtils.getToken();\r\n    ledgerConnector.listLedgers(accessToken).then((result) => {\r\n      setShowSpinner(false);\r\n      if (result.success) {\r\n        ledgers.current = result.data.filter((item) => {\r\n          return item.Type === 'regular';\r\n        });\r\n        ledgers.current.sort(sortLedgers);\r\n        setDisplayedLedgers(ledgers.current);\r\n        configureDropdown();\r\n      }\r\n      else {\r\n        if (result.status === 'Unauthorized') {\r\n          loginHandler(updateLedgerList);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(updateLedgerList, []);\r\n\r\n  const showFixed = () => {\r\n    selectionHandler({\r\n      target: {\r\n        dataset: {\r\n          year: 0,\r\n          month: 0\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  const filterByYear = (year) => {\r\n    return ledgers.current.filter((item) => {\r\n      return parseInt(item.Year) === parseInt(year);\r\n    });\r\n  }\r\n\r\n  const addLedger = () => {\r\n    let date = new Date();\r\n    let latestYear = date.getFullYear();\r\n    let latestMonth = date.getMonth() + 1;\r\n\r\n    if (ledgers.current.length > 0) {\r\n      latestYear = parseInt(ledgers.current[0].Year);\r\n      latestMonth = parseInt(ledgers.current[0].Month);\r\n\r\n      latestMonth++;\r\n      if (latestMonth === 13) {\r\n        latestYear++;\r\n        latestMonth = 1;\r\n      }\r\n    }\r\n\r\n    selectionHandler({\r\n      target: {\r\n        dataset: {\r\n          year: latestYear,\r\n          month: latestMonth\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  const onChangeHandler = (event, item) => {\r\n    if (item.value === '') {\r\n      setDisplayedLedgers(ledgers.current);\r\n    }\r\n    else {\r\n      setDisplayedLedgers(filterByYear(item.value).sort(sortLedgers));\r\n    }\r\n  }\r\n\r\n  const renderCell = (item, index) => {\r\n    return (\r\n      <div className=\"list-item\" onClick={selectionHandler} data-year={item.Year} data-month={item.Month}>\r\n        <Text data-year={item.Year} data-month={item.Month}>{`${item.Year} ${months[item.Month]}`}</Text>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const commandItems = [\r\n    {\r\n      key: 'new',\r\n      text: 'New item',\r\n      iconProps: { iconName: 'Add' },\r\n      onClick: addLedger\r\n    }\r\n  ];\r\n  const farItems = [\r\n    {\r\n      key: 'fixed',\r\n      text: 'Fixed',\r\n      iconProps: { iconName: 'Calendar' },\r\n      onClick: showFixed\r\n    },\r\n    {\r\n      key: 'refresh',\r\n      text: 'Refresh',\r\n      ariaLabel: 'Refresh',\r\n      iconOnly: true,\r\n      iconProps: { iconName: 'Refresh' },\r\n      onClick: updateLedgerList\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div data-is-scrollable=\"true\">\r\n      <Stack>\r\n        <Dropdown placeholder=\"Filter by year\" options={dropdownOptions} onChange={onChangeHandler} />\r\n        <CommandBar\r\n          items={commandItems}\r\n          farItems={farItems}\r\n          ariaLabel=\"\"\r\n        />\r\n        { showSpinner && <Spinner size={SpinnerSize.medium} /> }\r\n        <List items={displayedLedgers} onRenderCell={renderCell} />\r\n      </Stack>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LedgerList;\r\n","import React, { useEffect, useRef, useReducer, useState } from 'react';\r\nimport { MessageBar, MessageBarType, IconButton } from 'office-ui-fabric-react';\r\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Pivot, PivotItem } from 'office-ui-fabric-react/lib/Pivot';\r\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { ShimmeredDetailsList } from 'office-ui-fabric-react/lib/ShimmeredDetailsList';\r\nimport { SelectionMode, DetailsListLayoutMode } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport ledgerConnector from '../utils/ledgerConnector.js';\r\nimport authUtils from './../utils/authUtils.js';\r\n\r\nconst calculateTotal = (total, current) => {\r\n  if (current.Amount) {\r\n    return total + parseInt(current.Amount);\r\n  }\r\n  return total;\r\n}\r\n\r\nconst ledgerReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET':\r\n      return action.ledger;\r\n    case 'ADD_FIXED':\r\n      return {\r\n        ...state,\r\n        Debits: state.Debits.concat({\r\n          Label: 'Fixed expenses',\r\n          Amount: action.debitTotal\r\n        }),\r\n        Credits: state.Credits.concat({\r\n          Label: 'Fixed income',\r\n          Amount: action.creditTotal\r\n        }),\r\n        DebitTotal: action.debitTotal,\r\n        CreditTotal: action.creditTotal\r\n      };\r\n    case 'ADD':\r\n      return {\r\n        ...state,\r\n        [action.book]: state[action.book].concat({\r\n          Label: '',\r\n          Amount: ''\r\n        })\r\n      };\r\n    case 'UPDATE_INCOME':\r\n      const newCredits = state.Credits.map((el, i) => {\r\n        if (i === action.index) return { ...el, [action.field]: action.value };\r\n        else return el;\r\n      });\r\n      const creditTotal = newCredits.reduce(calculateTotal, 0);\r\n      return {\r\n        ...state,\r\n        Credits: newCredits,\r\n        CreditTotal: creditTotal\r\n      };\r\n    case 'UPDATE_EXPENSE':\r\n      const newDebits = state.Debits.map((el, i) => {\r\n        if (i === action.index) return { ...el, [action.field]: action.value };\r\n        else return el;\r\n      });\r\n      console.log(newDebits);\r\n      const debitTotal = newDebits.reduce(calculateTotal, 0);\r\n      return {\r\n        ...state,\r\n        Debits: newDebits,\r\n        DebitTotal: debitTotal\r\n      };\r\n    case 'DELETE':\r\n      state[action.book].splice(action.index, 1);\r\n      return {\r\n        ...state,\r\n        [action.book]: state[action.book]\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst LedgerDetails = (props) => {\r\n  const loginHandler = props.loginHandler;\r\n  const backToList = props.returnHandler;\r\n  const parameters = {\r\n    year: props.selection.year,\r\n    month: props.selection.month,\r\n    type: props.selection.year === 0 ? 'fixed' : 'regular'\r\n  };\r\n  const newLedger = useRef(false);\r\n  const [ledger, dispatchLedger] = useReducer(ledgerReducer, {\r\n    Type: parameters.type,\r\n    Month: parameters.month,\r\n    Year: parameters.year,\r\n    Debits: [],\r\n    DebitTotal: \"\",\r\n    Credits: [],\r\n    CreditTotal: \"\"\r\n  });\r\n\r\n  const [selectedTab, setSelectedTab] = useState('Debits');\r\n  const [saveSuccess, setSaveSuccess] = useState(false);\r\n  const [saveFailed, setSaveFailed] = useState(false);\r\n  const [dataLoaded, setDataLoaded] = useState(false);\r\n\r\n  const populateFixedItems = () => {\r\n    console.log(`Loading fixed items`);\r\n    setDataLoaded(false);\r\n\r\n    const { accessToken } = authUtils.getToken();\r\n    ledgerConnector.getLedger(accessToken, 0, 0).then((result) => {\r\n      setDataLoaded(true);\r\n      if (result.success) {\r\n        dispatchLedger({ type: 'ADD_FIXED', debitTotal: result.data.DebitTotal, creditTotal: result.data.CreditTotal });\r\n      }\r\n      else {\r\n        if (result.status === 'Unauthorized') {\r\n          loginHandler(populateFixedItems);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  const getLedgerDetails = () => {\r\n    console.log(`Loading ${parameters.year}/${parameters.month}`);\r\n\r\n    const { accessToken } = authUtils.getToken();\r\n    ledgerConnector.getLedger(accessToken, parameters.year, parameters.month).then((result) => {\r\n      setDataLoaded(true);\r\n      if (result.success) {\r\n        dispatchLedger({ type: 'SET', ledger: result.data });\r\n      }\r\n      else {\r\n        if (result.status === 'Not found') {\r\n          console.log('No data found. New ledger will be created');\r\n          newLedger.current = true;\r\n          if (ledger.Type === 'regular') {\r\n            populateFixedItems();\r\n          }\r\n        }\r\n        else if (result.status === 'Unauthorized') {\r\n          loginHandler(getLedgerDetails);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  useEffect(getLedgerDetails, []);\r\n\r\n  const addItem = () => {\r\n    console.log(`Adding new item to ${selectedTab}`);\r\n\r\n    dispatchLedger({ type: 'ADD', book: selectedTab });\r\n  }\r\n\r\n  const deleteItem = (selectedTab, index) => {\r\n    dispatchLedger({ type: 'DELETE', index: index, book: selectedTab });\r\n  }\r\n\r\n  const save = () => {\r\n    setSaveSuccess(false);\r\n    setSaveFailed(false);\r\n    const { accessToken } = authUtils.getToken();\r\n    if (newLedger.current) {\r\n      ledgerConnector.addLedger(accessToken, ledger).then((result) => {\r\n        if (result.success) {\r\n          setSaveSuccess(true);\r\n        }\r\n        else {\r\n          setSaveFailed(true);\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      ledgerConnector.updateLedger(accessToken, ledger).then((result) => {\r\n        if (result.success) {\r\n          setSaveSuccess(true);\r\n        }\r\n        else {\r\n          setSaveFailed(true);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const onChangeHandler = (event) => {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n    const index = parseInt(event.target.dataset.index);\r\n    console.log(`Updating ${name} of item ${index} of ${selectedTab}`);\r\n\r\n    if (selectedTab === 'Credits') {\r\n      dispatchLedger({ type: 'UPDATE_INCOME', index: index, field: name, value: value });\r\n    }\r\n    else {\r\n      dispatchLedger({ type: 'UPDATE_EXPENSE', index: index, field: name, value: value });\r\n    }\r\n  }\r\n\r\n  const renderItemColumn = (item, index, column) => {\r\n    switch (column.key) {\r\n      case 'item':\r\n        return <TextField ariaLabel=\"Item\" name=\"Label\" data-index={index} value={ledger[selectedTab][index].Label} onChange={onChangeHandler} />;\r\n\r\n      case 'amount':\r\n        return <TextField ariaLabel=\"Amount\" name=\"Amount\" type=\"number\" data-index={index} value={ledger[selectedTab][index].Amount} onChange={onChangeHandler} />;\r\n\r\n      case 'delete':\r\n        return <IconButton iconProps={{ iconName: 'Cancel' }} title=\"Delete\" ariaLabel=\"Delete\" onClick={() => deleteItem(selectedTab, index) } />\r\n\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  const displayprops = {\r\n    columns: [\r\n      {\r\n        key: 'item',\r\n        name: 'Item',\r\n        fieldName: 'Label'\r\n      },\r\n      {\r\n        key: 'amount',\r\n        name: 'Amount',\r\n        fieldName: 'Amount',\r\n        maxWidth: 80\r\n      },\r\n      {\r\n        key: 'delete',\r\n        name: 'Delete',\r\n        fieldName: '',\r\n        maxWidth: 16\r\n      }\r\n    ],\r\n    stackItemStyles: {\r\n      root: {\r\n        alignItems: 'center',\r\n        justifyContent: 'right',\r\n        display: 'grid'\r\n      }\r\n    }\r\n  }\r\n  const commandItems = [\r\n    {\r\n      key: 'back',\r\n      text: 'Back',\r\n      ariaLabel: 'Back',\r\n      iconOnly: true,\r\n      iconProps: { iconName: 'Back' },\r\n      onClick: backToList\r\n    },\r\n    {\r\n      key: 'new',\r\n      text: 'New item',\r\n      iconProps: { iconName: 'Add' },\r\n      onClick: addItem\r\n    }\r\n  ];\r\n  const farItems = [\r\n    {\r\n      key: 'save',\r\n      text: 'Save',\r\n      ariaLabel: 'Save',\r\n      iconOnly: true,\r\n      iconProps: { iconName: 'CheckMark' },\r\n      onClick: save\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        saveSuccess &&\r\n        <MessageBar messageBarType={MessageBarType.success} isMultiline={false}>\r\n          Saved\r\n        </MessageBar>\r\n      }\r\n      {\r\n        saveFailed &&\r\n        <MessageBar messageBarType={MessageBarType.error} isMultiline={false}>\r\n          Could not save. Please try again.\r\n        </MessageBar>\r\n      }\r\n      <CommandBar\r\n        items={commandItems}\r\n        farItems={farItems}\r\n        ariaLabel=\"\"\r\n      />\r\n      <Pivot\r\n          selectedKey={selectedTab}\r\n          onLinkClick={(item) => setSelectedTab(item.props.itemKey)}\r\n          styles={{ link: {width:\"50%\"}, linkIsSelected: {width:\"50%\"} }}>\r\n        <PivotItem headerText=\"Expenses\" itemKey=\"Debits\">\r\n          <div data-is-scrollable=\"true\">\r\n            <ShimmeredDetailsList\r\n              items={ledger.Debits}\r\n              columns={displayprops.columns}\r\n              selectionMode={SelectionMode.none}\r\n              layoutMode={DetailsListLayoutMode.justified}\r\n              isHeaderVisible={true}\r\n              enableShimmer={!dataLoaded}\r\n              onRenderItemColumn={renderItemColumn}\r\n            />\r\n            <Stack horizontal horizontalAlign=\"end\" tokens={{ childrenGap: 10, padding: 32 }}>\r\n            <Stack.Item grow={5} styles={displayprops.stackItemStyles}>\r\n                Total\r\n              </Stack.Item>\r\n              <Stack.Item grow styles={displayprops.stackItemStyles}>\r\n                {ledger.DebitTotal}\r\n              </Stack.Item>\r\n            </Stack>\r\n          </div>\r\n        </PivotItem>\r\n        <PivotItem headerText=\"Income\" itemKey=\"Credits\">\r\n          <div data-is-scrollable=\"true\">\r\n            <ShimmeredDetailsList\r\n              items={ledger.Credits}\r\n              columns={displayprops.columns}\r\n              selectionMode={SelectionMode.none}\r\n              layoutMode={DetailsListLayoutMode.justified}\r\n              isHeaderVisible={true}\r\n              enableShimmer={!dataLoaded}\r\n              onRenderItemColumn={renderItemColumn}\r\n            />\r\n            <Stack horizontal horizontalAlign=\"end\" tokens={{ childrenGap: 10, padding: 32 }}>\r\n              <Stack.Item grow={5} styles={displayprops.stackItemStyles}>\r\n                Total\r\n              </Stack.Item>\r\n              <Stack.Item grow styles={displayprops.stackItemStyles}>\r\n                {ledger.CreditTotal}\r\n              </Stack.Item>\r\n            </Stack>\r\n          </div>\r\n        </PivotItem>\r\n      </Pivot>\r\n      <Stack horizontal horizontalAlign=\"end\" tokens={{ childrenGap: 10, padding: 32 }}>\r\n        <Stack.Item grow={5} styles={displayprops.stackItemStyles}>\r\n          <b>Net</b>\r\n        </Stack.Item>\r\n        <Stack.Item grow styles={displayprops.stackItemStyles}>\r\n          <b>{ledger.CreditTotal - ledger.DebitTotal}</b>\r\n        </Stack.Item>\r\n      </Stack>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LedgerDetails;\r\n","import React, { useState, useRef } from 'react';\r\nimport { Text } from 'office-ui-fabric-react/lib/Text';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport AuthScreen from './components/AuthScreen.js';\r\nimport LedgerList from './components/LedgerList.js';\r\nimport LedgerDetails from './components/LedgerDetails.js';\r\nimport authConnector from './utils/authConnector.js';\r\nimport './css/App.css';\r\nimport authUtils from './utils/authUtils.js';\r\n\r\nconst App = (props) => {\r\n  const [title, setTitle] = useState('Ledgers');\r\n  const [showLedgerList, setShowLedgerList] = useState(true);\r\n  const [showLedger, setShowLedger] = useState(false);\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [selectedLedger, setSelectedLedger] = useState({\r\n    year: '',\r\n    month: ''\r\n  });\r\n  const origin = useRef('');\r\n  const months = ['', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\n  const loginHandler = (retryFunc) => {\r\n    const {refreshToken} = authUtils.getToken();\r\n\r\n    if (refreshToken) {\r\n      authConnector.renew(refreshToken).then((result) => {\r\n        if (result.success) {\r\n          authUtils.saveToken(result.accessToken, refreshToken);\r\n          retryFunc();\r\n        }\r\n        else {\r\n          origin.current = title;\r\n          setTitle('Sign in');\r\n          setShowLedgerList(false);\r\n          setShowLedger(false);\r\n          setShowLogin(true);\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      origin.current = title;\r\n      setTitle('Sign in');\r\n      setShowLedgerList(false);\r\n      setShowLedger(false);\r\n      setShowLogin(true);\r\n    }\r\n  }\r\n\r\n  const loggedIn = () => {\r\n    if (origin.current === 'Ledgers') {\r\n      setTitle('Ledgers');\r\n      setShowLedgerList(true);\r\n      setShowLedger(false);\r\n      setShowLogin(false);\r\n    }\r\n    else {\r\n      setTitle(origin.current);\r\n      setShowLedgerList(false);\r\n      setShowLedger(true);\r\n      setShowLogin(false);\r\n    }\r\n  }\r\n\r\n  const selectionHandler = (event) => {\r\n    let year = parseInt(event.target.dataset.year);\r\n    let month = parseInt(event.target.dataset.month);\r\n    let title = `${year} ${months[month]}`;\r\n\r\n    if (year === 0 && month === 0) {\r\n      title = 'Fixed items';\r\n    }\r\n\r\n    setTitle(title);\r\n    setSelectedLedger({\r\n      year: year,\r\n      month: month\r\n    });\r\n    setShowLedgerList(false);\r\n    setShowLedger(true);\r\n    setShowLogin(false);\r\n  }\r\n\r\n  const backToList = () => {\r\n    setTitle('Ledgers');\r\n    setShowLedgerList(true);\r\n    setShowLedger(false);\r\n    setShowLogin(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"ms-Grid\" dir=\"ltr\">\r\n      <div className=\"ms-Grid-row header\">\r\n        <div className=\"ms-Grid-col ms-sm12 align-center\">\r\n          <Text variant={'large'}>{title}</Text>\r\n        </div>\r\n      </div>\r\n      <CSSTransition in={showLedgerList} timeout={200} classNames=\"ledgerList\" mountOnEnter unmountOnExit>\r\n        <LedgerList selectHandler={selectionHandler} loginHandler={loginHandler} />\r\n      </CSSTransition>\r\n      <CSSTransition in={showLedger} timeout={200} classNames=\"ledgerDetails\" mountOnEnter unmountOnExit>\r\n        <LedgerDetails selection={selectedLedger} loginHandler={loginHandler} returnHandler={backToList} />\r\n      </CSSTransition>\r\n      <CSSTransition in={showLogin} timeout={200} classNames=\"authScreen\" mountOnEnter unmountOnExit>\r\n        <AuthScreen completionCallback={loggedIn} />\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import syncWorker from './syncWorker';\r\n\r\nvar cacheName = 'fintrackCache-v1';\r\nvar appShellFiles = [\r\n  // List all static files\r\n  ''\r\n];\r\n\r\nsyncWorker.onmessage = (e) => {\r\n  if (e.data == 'Unauthorized') {\r\n\r\n  }\r\n};\r\n\r\nwindow.addEventListener('install', (e) => {\r\n  console.log('[Service worker] Install');\r\n  e.waitUntil(\r\n    caches.open(cacheName).then((cache) => {\r\n      console.log('[Service worker] Caching app shell');\r\n      return cache.addAll(appShellFiles);\r\n    })\r\n  );\r\n});\r\n\r\nwindow.addEventListener('fetch', (e) => {\r\n  e.respondWith(\r\n    // Try loading through network first\r\n    fetch(e.request).then((response) => {\r\n      return caches.open(cacheName).then((cache) => {\r\n        console.log('[Service Worker] Caching new resource: '+ e.request.url);\r\n        cache.put(e.request, response.clone());\r\n        return response;\r\n      });\r\n    }).catch(() => {\r\n      // Search the cache if it's a GET\r\n      if (e.request.method == 'GET') {\r\n        caches.match(e.request).then((r) => {\r\n          return r;\r\n        }).catch(() => {\r\n          return new Response(JSON.stringify({ error: 'No network connection' }));\r\n        });\r\n      }\r\n      // Save the data to be synced later\r\n      else {\r\n        e.request.json().then((data) => {\r\n          syncWorker.postMessage(data);\r\n        });\r\n      }\r\n    })\r\n  );\r\n});\r\n\r\nwindow.addEventListener('activate', (e) => {\r\n  e.waitUntil(\r\n    caches.keys().then((keyList) => {\r\n      return Promise.all(keyList.map((key) => {\r\n        if(key !== cacheName) {\r\n          return caches.delete(key);\r\n        }\r\n      }));\r\n    })\r\n  );\r\n});\r\n","import * as serviceworker from './workers/service-worker';\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/js/workers/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\r\nimport './css/index.css';\r\nimport '../node_modules/office-ui-fabric-react/dist/css/fabric.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\ninitializeIcons();\r\n\r\nReactDOM.render(\r\n  <Fabric>\r\n    <App />\r\n  </Fabric>\r\n  , document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}