{"version":3,"sources":["utils/authConnector.js","utils/authUtils.js","components/AuthScreen.js","utils/ledgerConnector.js","workers/syncWorker.js","components/LedgerList.js","components/LedgerDetails.js","App.js","workers/service-worker.js","serviceWorker.js","index.js"],"names":["getServerUrl","isReachable","fetch","this","method","mode","then","resp","catch","err","login","username","password","url","headers","body","JSON","stringify","UserName","Password","response","ok","json","data","success","accessToken","refreshToken","register","renew","getToken","localStorage","getItem","saveToken","setItem","AuthSceen","props","showLogin","bind","showRegister","handleInputChange","handleLogin","handleRegister","verifyPassword","loggedIn","completionCallback","state","showSpinner","regSuccess","regFailed","loginFailed","LoginUserName","LoginPassword","RegUserName","RegPassword","RegPasswordVerify","setState","event","value","target","name","preventDefault","authConnector","result","authUtils","onSubmit","Stack","tokens","childrenGap","horizontalAlign","MessageBar","messageBarType","MessageBarType","isMultiline","error","TextField","label","onChange","required","type","horizontal","verticalAlign","PrimaryButton","text","Spinner","size","SpinnerSize","small","Link","onClick","onGetErrorMessage","Component","db","listLedgers","token","getUrl","authHeader","Headers","status","getLedger","year","month","addLedger","ledger","addUrl","updateLedger","updateUrl","Id","deleteLedger","deleteUrl","LedgerList","updateLedgerList","showFixed","onChangeHandler","renderCell","showingFixed","selectionHandler","selectHandler","loginHandler","months","ledgers","commandItems","key","iconProps","iconName","farItems","ariaLabel","iconOnly","dropdownOptions","displayedLedgers","years","i","length","indexOf","Year","push","parseInt","sort","a","b","options","ledgerConnector","filter","item","Type","sortLedgers","configureDropdown","dataset","Month","date","Date","latestYear","getFullYear","latestMonth","getMonth","filterByYear","index","className","data-year","data-month","Text","data-is-scrollable","Dropdown","placeholder","CommandBar","items","medium","List","onRenderCell","LedgerDetails","save","addItem","handleTabClick","renderItemColumn","populateFixedItems","backToList","returnHandler","parameters","selection","newLedger","displayprops","columns","fieldName","isPadded","stackItemStyles","root","alignItems","justifyContent","display","Debits","DebitTotal","Credits","CreditTotal","selectedTab","saveSuccess","saveFailed","dataLoaded","getLedgerDetails","prevProps","console","log","prevState","concat","Label","Amount","total","current","itemKey","map","el","reduce","calculateTotal","column","data-index","Pivot","selectedKey","onLinkClick","styles","link","width","linkIsSelected","PivotItem","headerText","ShimmeredDetailsList","selectionMode","SelectionMode","none","layoutMode","DetailsListLayoutMode","justified","isHeaderVisible","enableShimmer","onRenderItemColumn","padding","Item","grow","App","title","showLedgerList","showLedger","selectedLedger","retryFunc","origin","dir","variant","CSSTransition","in","timeout","classNames","mountOnEnter","unmountOnExit","AuthScreen","dbRequest","window","indexedDB","open","onsuccess","onerror","onupgradeneeded","objectStore","createObjectStore","autoIncrement","createIndex","unique","serverUrl","isOnline","handleConnection","navigator","onLine","online","addEventListener","setInterval","transaction","openCursor","e","cursor","serverUpd","parse","UpdatedAt","postMessage","delete","continue","onmessage","add","appShellFiles","syncWorker","waitUntil","caches","cache","addAll","respondWith","request","put","clone","match","r","Response","keys","keyList","Promise","all","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initializeIcons","ReactDOM","render","Fabric","document","getElementById","URL","process","href","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f65dbd5a.chunk.js","sourcesContent":["function getServerUrl() {\r\n  return 'https://fintrack-image-occpy2fuaa-an.a.run.app';\r\n}\r\n\r\nfunction isReachable() {\r\n  return fetch(this.getServerUrl(), { method: 'HEAD', mode: 'no-cors' })\r\n    .then((resp) => {\r\n      return true;\r\n    })\r\n    .catch((err) => {\r\n      return false;\r\n    });\r\n}\r\n\r\nfunction login(username, password) {\r\n  var url = this.getServerUrl() + '/api/user/login';\r\n\r\n  return fetch(url, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ UserName: username, Password: password })\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json().then((data) => {\r\n        return {\r\n          success: true,\r\n          accessToken: data.accessToken,\r\n          refreshToken: data.refreshToken\r\n        };\r\n      });\r\n    }\r\n    else {\r\n      return {\r\n        success: false\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nfunction register(username, password) {\r\n  var url = this.getServerUrl() + '/api/user/register';\r\n\r\n  return fetch(url, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ UserName: username, Password: password })\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json().then((data) => {\r\n        return {\r\n          success: true,\r\n          accessToken: data.accessToken,\r\n          refreshToken: data.refreshToken\r\n        };\r\n      });\r\n    }\r\n    else {\r\n      return {\r\n        success: false\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nfunction renew(refreshToken) {\r\n  var url = this.getServerUrl() + '/api/user/renew';\r\n\r\n  return fetch(url, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: `\"${refreshToken}\"`\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json().then((data) => {\r\n        return {\r\n          success: true,\r\n          accessToken: data.accessToken\r\n        };\r\n      });\r\n    }\r\n    else {\r\n      return {\r\n        success: false\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nexport default {\r\n  getServerUrl,\r\n  isReachable,\r\n  login,\r\n  register,\r\n  renew\r\n};\r\n","function getToken() {\r\n  return {\r\n    accessToken: localStorage.getItem('accessToken'),\r\n    refreshToken: localStorage.getItem('refreshToken')\r\n  };\r\n}\r\n\r\nfunction saveToken(accessToken, refreshToken) {\r\n  localStorage.setItem('accessToken', accessToken);\r\n  localStorage.setItem('refreshToken', refreshToken);\r\n}\r\n\r\nexport default {\r\n  getToken,\r\n  saveToken\r\n};","import React, { Component } from 'react';\r\nimport { PrimaryButton, MessageBar, MessageBarType } from 'office-ui-fabric-react';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\r\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport authConnector from '../utils/authConnector.js';\r\nimport authUtils from '../utils/authUtils.js';\r\n\r\nclass AuthSceen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.showLogin = this.showLogin.bind(this);\r\n    this.showRegister = this.showRegister.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.verifyPassword = this.verifyPassword.bind(this);\r\n\r\n    this.loggedIn = this.props.completionCallback;\r\n    this.state = {\r\n      showLogin: true,\r\n      showRegister: false,\r\n      showSpinner: false,\r\n      regSuccess: false,\r\n      regFailed: false,\r\n      loginFailed: false,\r\n      LoginUserName: '',\r\n      LoginPassword: '',\r\n      RegUserName: '',\r\n      RegPassword: '',\r\n      RegPasswordVerify: ''\r\n    }\r\n  }\r\n\r\n  showLogin() {\r\n    this.setState({\r\n      showLogin: true,\r\n      showRegister: false,\r\n      regSuccess: false,\r\n      regFailed: false,\r\n      loginFailed: false\r\n    });\r\n  }\r\n\r\n  showRegister() {\r\n    this.setState({\r\n      showLogin: false,\r\n      showRegister: true,\r\n      regSuccess: false,\r\n      regFailed: false,\r\n      loginFailed: false\r\n    });\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  verifyPassword(value) {\r\n    return value === this.state.RegPassword ? '' : 'Passwords do not match';\r\n  }\r\n\r\n  handleLogin(event) {\r\n    event.preventDefault();\r\n\r\n    this.setState({\r\n      showSpinner: true\r\n    });\r\n    authConnector.login(this.state.LoginUserName, this.state.LoginPassword).then((result) => {\r\n      this.setState({\r\n        showSpinner: false\r\n      });\r\n      if (result.success) {\r\n        authUtils.saveToken(result.accessToken, result.refreshToken);\r\n        this.setState({\r\n          regSuccess: false,\r\n          loginFailed: false\r\n        });\r\n        this.loggedIn();\r\n      }\r\n      else {\r\n        this.setState({\r\n          regSuccess: false,\r\n          loginFailed: true\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleRegister(event) {\r\n    event.preventDefault();\r\n\r\n    if (this.state.RegPassword !== this.state.RegPasswordVerify) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      showSpinner: true\r\n    });\r\n    authConnector.register(this.state.LoginUserName, this.state.LoginPassword).then((result) => {\r\n      this.setState({\r\n        showSpinner: false\r\n      });\r\n      if (result.success) {\r\n        authUtils.saveToken(result.accessToken, result.refreshToken);\r\n        this.setState({\r\n          showLogin: true,\r\n          showRegister: false,\r\n          regSuccess: false,\r\n          regFailed: false\r\n        });\r\n        this.loggedIn();\r\n      }\r\n      else {\r\n        this.setState({\r\n          regFailed: true\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.showLogin &&\r\n          <form onSubmit={this.handleLogin}>\r\n            <Stack tokens={{ childrenGap: 10 }} horizontalAlign=\"center\">\r\n              {\r\n                this.state.regSuccess &&\r\n                <MessageBar messageBarType={MessageBarType.success} isMultiline={false}>\r\n                  Registration successful\r\n                </MessageBar>\r\n              }\r\n              {\r\n                this.state.loginFailed &&\r\n                <MessageBar messageBarType={MessageBarType.error} isMultiline={false}>\r\n                  The username and password do not match\r\n                </MessageBar>\r\n              }\r\n              <TextField label=\"User name\" name=\"LoginUserName\" value={this.state.LoginUserName} onChange={this.handleInputChange} required />\r\n              <TextField label=\"Password\" name=\"LoginPassword\" value={this.state.LoginPassword} onChange={this.handleInputChange} type=\"password\" required />\r\n              <Stack horizontal tokens={{ childrenGap: 10 }} verticalAlign=\"center\">\r\n                <PrimaryButton text=\"Login\" type=\"submit\" />\r\n                { this.state.showSpinner && <Spinner size={SpinnerSize.small} /> }\r\n              </Stack>\r\n              <Link onClick={this.showRegister}>Click here to register</Link>\r\n            </Stack>\r\n          </form>\r\n        }\r\n        {\r\n          this.state.showRegister &&\r\n          <form onSubmit={this.handleRegister}>\r\n            <Stack tokens={{ childrenGap: 10 }} horizontalAlign=\"center\">\r\n              {\r\n                this.state.regFailed &&\r\n                <MessageBar messageBarType={MessageBarType.error} isMultiline={false}>\r\n                  The username and password do not match.\r\n                </MessageBar>\r\n              }\r\n              <TextField label=\"User name\" name=\"RegUserName\" value={this.state.RegUserName} onChange={this.handleInputChange} required />\r\n              <TextField label=\"Password\" name=\"RegPassword\" type=\"password\" value={this.state.RegPassword} onChange={this.handleInputChange} required />\r\n              <TextField label=\"Verify password\" name=\"RegPasswordVerify\" type=\"password\" value={this.state.RegPasswordVerify} onChange={this.handleInputChange} onGetErrorMessage={this.verifyPassword} required />\r\n              <Stack horizontal tokens={{ childrenGap: 10 }} verticalAlign=\"center\">\r\n                <PrimaryButton text=\"Register\" type=\"submit\" />\r\n                { this.state.showSpinner && <Spinner size={SpinnerSize.small} /> }\r\n              </Stack>\r\n              <Link onClick={this.showLogin}>Return to login</Link>\r\n            </Stack>\r\n          </form>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthSceen;","function getServerUrl() {\r\n  return 'https://fintrack-image-occpy2fuaa-an.a.run.app';\r\n}\r\n\r\nfunction listLedgers(token) {\r\n  var getUrl = this.getServerUrl() + '/api/ledger/list';\r\n\r\n  var authHeader = new Headers({\r\n    'Authorization': 'Bearer ' + token\r\n  });\r\n\r\n  return fetch(getUrl, { headers: authHeader }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json().then((data) => {\r\n        return {\r\n          success: true,\r\n          data: data\r\n        };\r\n      });\r\n    }\r\n    else {\r\n      if (response.status === 404) {\r\n        return {\r\n          success: false,\r\n          status: 'Not found'\r\n        };\r\n      }\r\n      else if (response.status === 401 || response.status === 403) {\r\n        return {\r\n          success: false,\r\n          status: 'Unauthorized'\r\n        };\r\n      }\r\n      return {\r\n        success: false,\r\n        status: 'Error',\r\n        data: []\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nfunction getLedger(token, year, month) {\r\n  var getUrl = this.getServerUrl() + '/api/ledger/get?year=' + year + '&month=' + month;\r\n  var authHeader = new Headers({\r\n    'Authorization': 'Bearer ' + token\r\n  });\r\n\r\n  return fetch(getUrl, { headers: authHeader }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json().then((data) => {\r\n        return {\r\n          success: true,\r\n          data: data\r\n        };\r\n      });\r\n    }\r\n    else {\r\n      if (response.status === 401 || response.status === 403) {\r\n        return {\r\n          success: false,\r\n          status: 'Unauthorized'\r\n        };\r\n      }\r\n      else if (response.status === 404) {\r\n        return {\r\n          success: false,\r\n          status: 'Not found'\r\n        };\r\n      }\r\n      return {\r\n        success: false,\r\n        status: 'Error',\r\n        data: {\r\n          \"Id\": \"\",\r\n          \"Owner\": \"\",\r\n          \"Type\": \"\",\r\n          \"Month\": \"\",\r\n          \"Year\": \"\",\r\n          \"Debits\": [\r\n          ],\r\n          \"DebitTotal\": \"\",\r\n          \"Credits\": [\r\n          ],\r\n          \"CreditTotal\": \"\"\r\n        }\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nfunction addLedger(token, ledger) {\r\n  var addUrl = this.getServerUrl() + '/api/ledger/add';\r\n  var authHeader = new Headers({\r\n    'Authorization': 'Bearer ' + token,\r\n    'Content-Type': 'application/json'\r\n  });\r\n\r\n  return fetch(addUrl, {\r\n    method: 'POST',\r\n    headers: authHeader,\r\n    body: JSON.stringify(ledger)\r\n  })\r\n  .then((response) => {\r\n    if (response.ok) {\r\n      return {\r\n        success: true\r\n      };\r\n    }\r\n    else {\r\n      if (response.status === 401 || response.status === 403) {\r\n        return {\r\n          success: false,\r\n          status: 'Unauthorized'\r\n        };\r\n      }\r\n      return {\r\n        success: false,\r\n        status: 'Error'\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nfunction updateLedger(token, ledger) {\r\n  var updateUrl = this.getServerUrl() + '/api/ledger/update?id=' + ledger.Id;\r\n  var authHeader = new Headers({\r\n    'Authorization': 'Bearer ' + token,\r\n    'Content-Type': 'application/json'\r\n  });\r\n\r\n  return fetch(updateUrl, {\r\n    method: 'PUT',\r\n    headers: authHeader,\r\n    body: JSON.stringify(ledger)\r\n  })\r\n  .then((response) => {\r\n    if (response.ok) {\r\n      return {\r\n        success: true\r\n      };\r\n    }\r\n    else {\r\n      if (response.status === 401 || response.status === 403) {\r\n        return {\r\n          success: false,\r\n          status: 'Unauthorized'\r\n        };\r\n      }\r\n      return {\r\n        success: false,\r\n        status: 'Error'\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nfunction deleteLedger(token, ledger) {\r\n  var deleteUrl = this.getServerUrl() + '/api/ledger/delete?id=' + ledger.Id;\r\n  var authHeader = new Headers({\r\n    'Authorization': 'Bearer ' + token,\r\n    'Content-Type': 'application/json'\r\n  });\r\n\r\n  return fetch(deleteUrl, {\r\n    method: 'DELETE',\r\n    headers: authHeader\r\n  })\r\n  .then((response) => {\r\n    if (response.ok) {\r\n      return {\r\n        success: true\r\n      };\r\n    }\r\n    else {\r\n      if (response.status === 401 || response.status === 403) {\r\n        return {\r\n          success: false,\r\n          status: 'Unauthorized'\r\n        };\r\n      }\r\n      return {\r\n        success: false,\r\n        status: 'Error'\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nexport default {\r\n  getServerUrl,\r\n  listLedgers,\r\n  getLedger,\r\n  addLedger,\r\n  updateLedger,\r\n  deleteLedger\r\n};\r\n","import authUtils from './../utils/authUtils.js';\r\nimport authConnector from './../utils/authConnector.js';\r\nimport ledgerConnector from './../utils/ledgerConnector.js';\r\n\r\n// IndexedDB setup\r\nvar db;\r\nvar dbRequest = window.indexedDB.open('FinTrackDB', 1);\r\ndbRequest.onsuccess = (event) => {\r\n  db = event.target.result;\r\n};\r\ndbRequest.onerror = (event) => {\r\n  console.log(\"Unable to use IndexedDB\");\r\n};\r\ndbRequest.onupgradeneeded = (event) => {\r\n  db = event.target.result;\r\n\r\n  var objectStore = db.createObjectStore('ledgers', { autoIncrement : true });\r\n  objectStore.createIndex('Id', 'Id', { unique: false });\r\n  objectStore.createIndex('Year', 'Year', { unique: false });\r\n  objectStore.createIndex('Month', 'Month', { unique: false });\r\n};\r\n\r\n// Online offline handlers\r\nvar serverUrl = ledgerConnector.getServerUrl();\r\nvar isOnline = true;\r\nwindow.addEventListener('online', handleConnection);\r\nwindow.addEventListener('offline', handleConnection);\r\n\r\nfunction handleConnection() {\r\n  if (navigator.onLine) {\r\n    authConnector.isReachable(serverUrl).then((online) => {\r\n      if (online) {\r\n        console.log('Client online');\r\n        isOnline = true;\r\n      } else {\r\n        console.log('No connectivity');\r\n        isOnline = false;\r\n      }\r\n    });\r\n  } else {\r\n    console.log('Client offline');\r\n    isOnline = false;\r\n  }\r\n}\r\n\r\n// Worker core\r\nvar { accessToken } = authUtils.getToken();\r\nfunction onmessage(e) {\r\n  var objectStore = db.transaction(['ledgers'], 'readwrite').objectStore('ledgers');\r\n  objectStore.add(e.data);\r\n}\r\n\r\nsetInterval(sync, 10000);\r\n\r\nfunction sync() {\r\n  if (isOnline) {\r\n    var objectStore = db.transaction('ledgers').objectStore('ledgers');\r\n    objectStore.openCursor().onsuccess = (e) => {\r\n      var cursor = e.target.result;\r\n      if (cursor) {\r\n        console.log('Syncing entry ' + cursor.value.key);\r\n        syncLedger(cursor.value).then((result) => {\r\n          if (result) {\r\n            console.log('Entry ' + cursor.value.key + ' synced');\r\n            console.log('Deleting entry ' + cursor.value.key);\r\n            db.transaction('ledgers', 'readwrite').objectStore('ledgers').delete(cursor.value.key).onsuccess = () => true;\r\n          }\r\n        }).then((result) => {\r\n          console.log('Delete complete');\r\n          cursor.continue();\r\n        }).catch(() => {\r\n          console.log('Syncing failed for entry ' + cursor.value.key);\r\n          cursor.continue();\r\n        });\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nfunction syncLedger(ledger) {\r\n  ledgerConnector.getLedger(accessToken, ledger.Year, ledger.Month).then((result) => {\r\n    if (result.success) {\r\n      const serverUpd = Date.parse(result.data.UpdatedAt);\r\n      const localUpd = Date.parse(ledger.UpdatedAt);\r\n      if (localUpd > serverUpd) {\r\n        return updateLedger(ledger).then((result) => {\r\n          return result;\r\n        });\r\n      }\r\n      else {\r\n        return true;\r\n      }\r\n    }\r\n    else {\r\n      if (result.status === 'Unauthorized') {\r\n        postMessage('Unauthorized');\r\n        return false;\r\n      }\r\n      else if (result.status === 'Not found') {\r\n        return addLedger(ledger).then((result) => {\r\n          return result;\r\n        });\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction updateLedger(ledger) {\r\n  ledgerConnector.updateLedger(accessToken, ledger).then((result) => {\r\n    if (result.success) {\r\n      return true;\r\n    }\r\n    else {\r\n      if (result.status === 'Unauthorized') {\r\n        postMessage('Unauthorized');\r\n      }\r\n      return false;\r\n    }\r\n  });\r\n}\r\n\r\nfunction addLedger(ledger) {\r\n  ledgerConnector.addLedger(accessToken, ledger).then((result) => {\r\n    if (result.success) {\r\n      return true;\r\n    }\r\n    else {\r\n      if (result.status === 'Unauthorized') {\r\n        postMessage('Unauthorized');\r\n      }\r\n      return false;\r\n    }\r\n  });\r\n}\r\n\r\nexport default {\r\n  onmessage\r\n};\r\n","import React, { Component } from 'react';\r\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\r\nimport { Text } from 'office-ui-fabric-react/lib/Text';\r\nimport { Dropdown } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { List } from 'office-ui-fabric-react/lib/List';\r\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\r\nimport ledgerConnector from './../utils/ledgerConnector.js';\r\nimport authUtils from './../utils/authUtils.js';\r\n\r\nclass LedgerList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateLedgerList = this.updateLedgerList.bind(this);\r\n    this.addLedger = this.addLedger.bind(this);\r\n    this.showFixed = this.showFixed.bind(this);\r\n    this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    this.renderCell = this.renderCell.bind(this);\r\n\r\n    this.showingFixed = false;\r\n    this.selectionHandler = this.props.selectHandler;\r\n    this.loginHandler = this.props.loginHandler;\r\n    this.months = ['', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    this.ledgers = [];\r\n    this.commandItems = [\r\n      {\r\n        key: 'new',\r\n        text: 'New item',\r\n        iconProps: { iconName: 'Add' },\r\n        onClick: this.addLedger\r\n      }\r\n    ];\r\n    this.farItems = [\r\n      {\r\n        key: 'fixed',\r\n        text: 'Fixed',\r\n        iconProps: { iconName: 'Calendar' },\r\n        onClick: this.showFixed\r\n      },\r\n      {\r\n        key: 'refresh',\r\n        text: 'Refresh',\r\n        ariaLabel: 'Refresh',\r\n        iconOnly: true,\r\n        iconProps: { iconName: 'Refresh' },\r\n        onClick: this.updateLedgerList\r\n      }\r\n    ];\r\n    this.state = {\r\n      dropdownOptions: [],\r\n      displayedLedgers: [],\r\n      showSpinner: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateLedgerList();\r\n  }\r\n\r\n  configureDropdown() {\r\n    let years = [];\r\n    for (let i = 0; i < this.ledgers.length; i++) {\r\n      if (years.indexOf(this.ledgers[i].Year) === -1) {\r\n        years.push(parseInt(this.ledgers[i].Year));\r\n      }\r\n    }\r\n    years.sort((a, b) => b - a); // Descending\r\n\r\n    let options = [];\r\n    options.push({ key: '', text: '' });\r\n    for (let i = 0; i < years.length; i++) {\r\n      options.push({ key: years[i], text: years[i] });\r\n    }\r\n    this.setState({\r\n      dropdownOptions: options\r\n    });\r\n  }\r\n\r\n  updateLedgerList() {\r\n    this.setState({\r\n      showSpinner: true\r\n    });\r\n    const { accessToken } = authUtils.getToken();\r\n    ledgerConnector.listLedgers(accessToken).then((result) => {\r\n      this.setState({\r\n        showSpinner: false\r\n      });\r\n      if (result.success) {\r\n        this.ledgers = result.data.filter((item) => {\r\n          return item.Type === 'regular';\r\n        });\r\n        this.ledgers.sort(this.sortLedgers);\r\n        this.setState({\r\n          displayedLedgers: this.ledgers\r\n        });\r\n        this.configureDropdown();\r\n      }\r\n      else {\r\n        if (result.status === 'Unauthorized') {\r\n          this.loginHandler(this.updateLedgerList);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  showFixed() {\r\n    this.selectionHandler({\r\n      target: {\r\n        dataset: {\r\n          year: 0,\r\n          month: 0\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  filterByYear(year) {\r\n    return this.ledgers.filter((item) => {\r\n      return parseInt(item.Year) === parseInt(year);\r\n    });\r\n  }\r\n\r\n  sortLedgers(a, b) {\r\n    if (a.Year !== b.Year) {\r\n      return b.Year - a.Year;\r\n    }\r\n    return b.Month - a.Month;\r\n  }\r\n\r\n  addLedger() {\r\n    let date = new Date();\r\n    let latestYear = date.getFullYear();\r\n    let latestMonth = date.getMonth() + 1;\r\n\r\n    if (this.ledgers.length > 0) {\r\n      latestYear = parseInt(this.ledgers[0].Year);\r\n      latestMonth = parseInt(this.ledgers[0].Month);\r\n\r\n      latestMonth++;\r\n      if (latestMonth === 13) {\r\n        latestYear++;\r\n        latestMonth = 1;\r\n      }\r\n    }\r\n\r\n    this.selectionHandler({\r\n      target: {\r\n        dataset: {\r\n          year: latestYear,\r\n          month: latestMonth\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  onChangeHandler(event, item) {\r\n    if (item.value === '') {\r\n      this.setState({\r\n        displayedLedgers: this.ledgers\r\n      });\r\n    }\r\n    else {\r\n      this.setState({\r\n        displayedLedgers: this.filterByYear(item.value).sort(this.sortLedgers)\r\n      });\r\n    }\r\n  }\r\n\r\n  renderCell(item, index) {\r\n    return (\r\n      <div className=\"list-item\" onClick={this.selectionHandler} data-year={item.Year} data-month={item.Month}>\r\n        <Text data-year={item.Year} data-month={item.Month}>{`${item.Year} ${this.months[item.Month]}`}</Text>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div data-is-scrollable=\"true\">\r\n        <Stack>\r\n          <Dropdown placeholder=\"Filter by year\" options={this.state.dropdownOptions} onChange={this.onChangeHandler} />\r\n          <CommandBar\r\n            items={this.commandItems}\r\n            farItems={this.farItems}\r\n            ariaLabel=\"\"\r\n          />\r\n          { this.state.showSpinner && <Spinner size={SpinnerSize.medium} /> }\r\n          <List items={this.state.displayedLedgers} onRenderCell={this.renderCell} />\r\n        </Stack>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LedgerList;\r\n","import React, { Component } from 'react';\r\nimport { MessageBar, MessageBarType, DefaultPalette } from 'office-ui-fabric-react';\r\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Pivot, PivotItem } from 'office-ui-fabric-react/lib/Pivot';\r\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { ShimmeredDetailsList } from 'office-ui-fabric-react/lib/ShimmeredDetailsList';\r\nimport { SelectionMode, DetailsListLayoutMode } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport ledgerConnector from '../utils/ledgerConnector.js';\r\nimport authUtils from './../utils/authUtils.js';\r\n\r\nclass LedgerDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.save = this.save.bind(this);\r\n    this.addItem = this.addItem.bind(this);\r\n    this.handleTabClick = this.handleTabClick.bind(this);\r\n    this.renderItemColumn = this.renderItemColumn.bind(this);\r\n    this.onChangeHandler = this.onChangeHandler.bind(this);\r\n    this.populateFixedItems = this.populateFixedItems.bind(this);\r\n\r\n    this.loginHandler = this.props.loginHandler;\r\n    this.backToList = this.props.returnHandler;\r\n    this.parameters = {\r\n      year: this.props.selection.year,\r\n      month: this.props.selection.month,\r\n      type: this.props.selection.year === 0 ? 'fixed' : 'regular'\r\n    };\r\n    this.newLedger = false;\r\n    this.displayprops = {\r\n      columns: [\r\n        {\r\n          key: 'item',\r\n          name: 'Item',\r\n          fieldName: 'Label',\r\n          isPadded: true\r\n        },\r\n        {\r\n          key: 'amount',\r\n          name: 'Amount',\r\n          fieldName: 'Amount',\r\n          isPadded: true\r\n        },\r\n      ],\r\n      stackItemStyles: {\r\n        root: {\r\n          alignItems: 'center',\r\n          justifyContent: 'right',\r\n          display: 'grid'\r\n        }\r\n      }\r\n    }\r\n    this.commandItems = [\r\n      {\r\n        key: 'back',\r\n        text: 'Back',\r\n        ariaLabel: 'Back',\r\n        iconOnly: true,\r\n        iconProps: { iconName: 'Back' },\r\n        onClick: this.backToList\r\n      },\r\n      {\r\n        key: 'new',\r\n        text: 'New item',\r\n        iconProps: { iconName: 'Add' },\r\n        onClick: this.addItem\r\n      }\r\n    ];\r\n    this.farItems = [\r\n      {\r\n        key: 'save',\r\n        text: 'Save',\r\n        ariaLabel: 'Save',\r\n        iconOnly: true,\r\n        iconProps: { iconName: 'CheckMark' },\r\n        onClick: this.save\r\n      }\r\n    ];\r\n    this.state = {\r\n      ledger: {\r\n        Type: this.parameters.type,\r\n        Month: this.parameters.month,\r\n        Year: this.parameters.year,\r\n        Debits: [],\r\n        DebitTotal: \"\",\r\n        Credits: [],\r\n        CreditTotal: \"\"\r\n      },\r\n      selectedTab: 'Debits',\r\n      saveSuccess: false,\r\n      saveFailed: false,\r\n      dataLoaded: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLedgerDetails();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.selection.Year !== prevProps.selection.Year &&\r\n        this.props.selection.Month !== prevProps.selection.Month) {\r\n      this.getLedgerDetails();\r\n    }\r\n  }\r\n\r\n  getLedgerDetails() {\r\n    console.log(`Loading ${this.parameters.year}/${this.parameters.month}`);\r\n\r\n    const { accessToken } = authUtils.getToken();\r\n    ledgerConnector.getLedger(accessToken, this.parameters.year, this.parameters.month).then((result) => {\r\n      this.setState({\r\n        dataLoaded: true\r\n      });\r\n      if (result.success) {\r\n        this.setState({\r\n          ledger: result.data\r\n        });\r\n      }\r\n      else {\r\n        if (result.status === 'Not found') {\r\n          console.log('No data found. New ledger will be created');\r\n          this.newLedger = true;\r\n          if (this.state.ledger.Type === 'regular') {\r\n            this.populateFixedItems();\r\n          }\r\n        }\r\n        else if (result.status === 'Unauthorized') {\r\n          this.loginHandler(this.getLedgerDetails);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  populateFixedItems() {\r\n    console.log(`Loading fixed items`);\r\n    this.setState({\r\n      dataLoaded: false\r\n    });\r\n\r\n    const { accessToken } = authUtils.getToken();\r\n    ledgerConnector.getLedger(accessToken, 0, 0).then((result) => {\r\n      this.setState({\r\n        dataLoaded: true\r\n      });\r\n      if (result.success) {\r\n        this.setState(prevState => ({\r\n          ledger: {\r\n            ...prevState.ledger,\r\n            Debits: prevState.ledger.Debits.concat({\r\n              Label: 'Fixed expenses',\r\n              Amount: result.data.DebitTotal\r\n            }),\r\n            Credits: prevState.ledger.Credits.concat({\r\n              Label: 'Fixed income',\r\n              Amount: result.data.CreditTotal\r\n            }),\r\n            DebitTotal: result.data.DebitTotal,\r\n            CreditTotal: result.data.CreditTotal\r\n          }\r\n        }));\r\n      }\r\n      else {\r\n        if (result.status === 'Unauthorized') {\r\n          this.loginHandler(this.populateFixedItems);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  addItem() {\r\n    console.log(`Adding new item to ${this.state.selectedTab}`);\r\n\r\n    this.setState(prevState => ({\r\n      ledger: {\r\n        ...prevState.ledger,\r\n        [this.state.selectedTab]: prevState.ledger[this.state.selectedTab].concat({\r\n          Label: '',\r\n          Amount: ''\r\n        })\r\n      }\r\n    }));\r\n  }\r\n\r\n  save() {\r\n    this.setState({\r\n      saveSuccess: false,\r\n      saveFailed: false\r\n    });\r\n    const { accessToken } = authUtils.getToken();\r\n    if (this.newLedger) {\r\n      ledgerConnector.addLedger(accessToken, this.state.ledger).then((result) => {\r\n        if (result.success) {\r\n          this.setState({\r\n            saveSuccess: true\r\n          });\r\n        }\r\n        else {\r\n          this.setState({\r\n            saveFailed: true\r\n          });\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      ledgerConnector.updateLedger(accessToken, this.state.ledger).then((result) => {\r\n        if (result.success) {\r\n          this.setState({\r\n            saveSuccess: true\r\n          });\r\n        }\r\n        else {\r\n          this.setState({\r\n            saveFailed: true\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  calculateTotal(total, current) {\r\n    if (current.Amount) {\r\n      return total + parseInt(current.Amount);\r\n    }\r\n    return total;\r\n  }\r\n\r\n  handleTabClick(item) {\r\n    this.setState({\r\n      selectedTab: item.props.itemKey\r\n    });\r\n  }\r\n\r\n  onChangeHandler(event) {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n    const index = parseInt(event.target.dataset.index);\r\n    console.log(`Updating ${name} of item ${index} of ${this.state.selectedTab}`);\r\n\r\n    this.setState(prevState => ({\r\n      ledger: {\r\n        ...prevState.ledger,\r\n        [this.state.selectedTab]: prevState.ledger[this.state.selectedTab].map((el, i) => i === index ? {\r\n          ...el, [name]: value\r\n        } : el)\r\n      }\r\n    }), () => {\r\n      if (this.state.selectedTab === 'Debits') {\r\n        this.setState(prevState => ({\r\n          ledger: {\r\n            ...prevState.ledger,\r\n            DebitTotal: prevState.ledger.Debits.reduce(this.calculateTotal, 0)\r\n          }\r\n        }));\r\n      }\r\n      else {\r\n        this.setState(prevState => ({\r\n          ledger: {\r\n            ...prevState.ledger,\r\n            CreditTotal: prevState.ledger.Credits.reduce(this.calculateTotal, 0)\r\n          }\r\n        }));\r\n      }\r\n    });\r\n  }\r\n\r\n  renderItemColumn(item, index, column) {\r\n    switch (column.key) {\r\n      case 'item':\r\n        return <TextField ariaLabel=\"Item\" name=\"Label\" data-index={index} value={this.state.ledger[this.state.selectedTab][index].Label} onChange={this.onChangeHandler} />;\r\n\r\n      case 'amount':\r\n        return <TextField ariaLabel=\"Amount\" name=\"Amount\" type=\"number\" data-index={index} value={this.state.ledger[this.state.selectedTab][index].Amount} onChange={this.onChangeHandler} />;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.saveSuccess &&\r\n          <MessageBar messageBarType={MessageBarType.success} isMultiline={false}>\r\n            Saved\r\n          </MessageBar>\r\n        }\r\n        {\r\n          this.state.saveFailed &&\r\n          <MessageBar messageBarType={MessageBarType.error} isMultiline={false}>\r\n            Could not save. Please try again.\r\n          </MessageBar>\r\n        }\r\n        <CommandBar\r\n          items={this.commandItems}\r\n          farItems={this.farItems}\r\n          ariaLabel=\"\"\r\n        />\r\n        <Pivot\r\n            selectedKey={this.state.selectedTab}\r\n            onLinkClick={this.handleTabClick}\r\n            styles={{ link: {width:\"50%\"}, linkIsSelected: {width:\"50%\"} }}>\r\n          <PivotItem headerText=\"Expenses\" itemKey=\"Debits\">\r\n            <div data-is-scrollable=\"true\">\r\n              <ShimmeredDetailsList\r\n                items={this.state.ledger.Debits}\r\n                columns={this.displayprops.columns}\r\n                selectionMode={SelectionMode.none}\r\n                layoutMode={DetailsListLayoutMode.justified}\r\n                isHeaderVisible={true}\r\n                enableShimmer={!this.state.dataLoaded}\r\n                onRenderItemColumn={this.renderItemColumn}\r\n              />\r\n              <Stack horizontal horizontalAlign=\"end\" tokens={{ childrenGap: 10, padding: 32 }}>\r\n              <Stack.Item grow={5} styles={this.displayprops.stackItemStyles}>\r\n                  Total\r\n                </Stack.Item>\r\n                <Stack.Item grow styles={this.displayprops.stackItemStyles}>\r\n                  {this.state.ledger.DebitTotal}\r\n                </Stack.Item>\r\n              </Stack>\r\n            </div>\r\n          </PivotItem>\r\n          <PivotItem headerText=\"Income\" itemKey=\"Credits\">\r\n            <div data-is-scrollable=\"true\">\r\n              <ShimmeredDetailsList\r\n                items={this.state.ledger.Credits}\r\n                columns={this.displayprops.columns}\r\n                selectionMode={SelectionMode.none}\r\n                layoutMode={DetailsListLayoutMode.justified}\r\n                isHeaderVisible={true}\r\n                enableShimmer={!this.state.dataLoaded}\r\n                onRenderItemColumn={this.renderItemColumn}\r\n              />\r\n              <Stack horizontal horizontalAlign=\"end\" tokens={{ childrenGap: 10, padding: 32 }}>\r\n                <Stack.Item grow={5} styles={this.displayprops.stackItemStyles}>\r\n                  Total\r\n                </Stack.Item>\r\n                <Stack.Item grow styles={this.displayprops.stackItemStyles}>\r\n                  {this.state.ledger.CreditTotal}\r\n                </Stack.Item>\r\n              </Stack>\r\n            </div>\r\n          </PivotItem>\r\n        </Pivot>\r\n        <Stack horizontal horizontalAlign=\"end\" tokens={{ childrenGap: 10, padding: 32 }}>\r\n          <Stack.Item grow={5} styles={this.displayprops.stackItemStyles}>\r\n            <b>Net</b>\r\n          </Stack.Item>\r\n          <Stack.Item grow styles={this.displayprops.stackItemStyles}>\r\n            <b>{this.state.ledger.CreditTotal - this.state.ledger.DebitTotal}</b>\r\n          </Stack.Item>\r\n        </Stack>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LedgerDetails;\r\n","import React, { Component } from 'react';\r\nimport { Text } from 'office-ui-fabric-react/lib/Text';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport AuthScreen from './components/AuthScreen.js';\r\nimport LedgerList from './components/LedgerList.js';\r\nimport LedgerDetails from './components/LedgerDetails.js';\r\nimport authConnector from './utils/authConnector.js';\r\nimport './css/App.css';\r\nimport authUtils from './utils/authUtils.js';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.loginHandler = this.loginHandler.bind(this);\r\n    this.selectionHandler = this.selectionHandler.bind(this);\r\n    this.backToList = this.backToList.bind(this);\r\n    this.loggedIn = this.loggedIn.bind(this);\r\n\r\n    this.state = {\r\n      title: 'Ledgers',\r\n      showLedgerList: true,\r\n      showLedger: false,\r\n      showLogin: false,\r\n      selectedLedger: {\r\n        year: '',\r\n        month: ''\r\n      }\r\n    };\r\n    this.months = ['', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  }\r\n\r\n  loginHandler(retryFunc) {\r\n    const {refreshToken} = authUtils.getToken();\r\n\r\n    if (refreshToken) {\r\n      authConnector.renew(refreshToken).then((result) => {\r\n        if (result.success) {\r\n          authUtils.saveToken(result.accessToken, refreshToken);\r\n          retryFunc();\r\n        }\r\n        else {\r\n          this.origin = this.state.title;\r\n          this.setState({\r\n            title: 'Sign in',\r\n            showLedgerList: false,\r\n            showLedger: false,\r\n            showLogin: true\r\n          });\r\n        }\r\n      });\r\n    }\r\n    else {\r\n      this.origin = this.state.title;\r\n      this.setState({\r\n        title: 'Sign in',\r\n        showLedgerList: false,\r\n        showLedger: false,\r\n        showLogin: true\r\n      });\r\n    }\r\n  }\r\n\r\n  loggedIn() {\r\n    if (this.origin === 'Ledgers') {\r\n      this.setState({\r\n        title: 'Ledgers',\r\n        showLedgerList: true,\r\n        showLedger: false,\r\n        showLogin: false\r\n      });\r\n    }\r\n    else {\r\n      this.setState({\r\n        title: this.origin,\r\n        showLedgerList: false,\r\n        showLedger: true,\r\n        showLogin: false\r\n      });\r\n    }\r\n  }\r\n\r\n  selectionHandler(event) {\r\n    let year = parseInt(event.target.dataset.year);\r\n    let month = parseInt(event.target.dataset.month);\r\n    let title = `${year} ${this.months[month]}`;\r\n\r\n    if (year === 0 && month === 0) {\r\n      title = 'Fixed items';\r\n    }\r\n\r\n    this.setState({\r\n      title: title,\r\n      selectedLedger: {\r\n        year: year,\r\n        month: month\r\n      },\r\n      showLedgerList: false,\r\n      showLedger: true,\r\n      showLogin: false\r\n    });\r\n  }\r\n\r\n  backToList() {\r\n    this.setState({\r\n      title: 'Ledgers',\r\n      showLedgerList: true,\r\n      showLedger: false,\r\n      showLogin: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ms-Grid\" dir=\"ltr\">\r\n        <div className=\"ms-Grid-row header\">\r\n          <div className=\"ms-Grid-col ms-sm12 align-center\">\r\n            <Text variant={'large'}>{this.state.title}</Text>\r\n          </div>\r\n        </div>\r\n        <CSSTransition in={this.state.showLedgerList} timeout={200} classNames=\"ledgerList\" mountOnEnter unmountOnExit>\r\n          <LedgerList selectHandler={this.selectionHandler} loginHandler={this.loginHandler} />\r\n        </CSSTransition>\r\n        <CSSTransition in={this.state.showLedger} timeout={200} classNames=\"ledgerDetails\" mountOnEnter unmountOnExit>\r\n          <LedgerDetails selection={this.state.selectedLedger} loginHandler={this.loginHandler} returnHandler={this.backToList} />\r\n        </CSSTransition>\r\n        <CSSTransition in={this.state.showLogin} timeout={200} classNames=\"authScreen\" mountOnEnter unmountOnExit>\r\n          <AuthScreen completionCallback={this.loggedIn} />\r\n        </CSSTransition>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import syncWorker from './syncWorker';\r\n\r\nvar cacheName = 'fintrackCache-v1';\r\nvar appShellFiles = [\r\n  // List all static files\r\n  ''\r\n];\r\n\r\nsyncWorker.onmessage = (e) => {\r\n  if (e.data == 'Unauthorized') {\r\n\r\n  }\r\n};\r\n\r\nwindow.addEventListener('install', (e) => {\r\n  console.log('[Service worker] Install');\r\n  e.waitUntil(\r\n    caches.open(cacheName).then((cache) => {\r\n      console.log('[Service worker] Caching app shell');\r\n      return cache.addAll(appShellFiles);\r\n    })\r\n  );\r\n});\r\n\r\nwindow.addEventListener('fetch', (e) => {\r\n  e.respondWith(\r\n    // Try loading through network first\r\n    fetch(e.request).then((response) => {\r\n      return caches.open(cacheName).then((cache) => {\r\n        console.log('[Service Worker] Caching new resource: '+ e.request.url);\r\n        cache.put(e.request, response.clone());\r\n        return response;\r\n      });\r\n    }).catch(() => {\r\n      // Search the cache if it's a GET\r\n      if (e.request.method == 'GET') {\r\n        caches.match(e.request).then((r) => {\r\n          return r;\r\n        }).catch(() => {\r\n          return new Response(JSON.stringify({ error: 'No network connection' }));\r\n        });\r\n      }\r\n      // Save the data to be synced later\r\n      else {\r\n        e.request.json().then((data) => {\r\n          syncWorker.postMessage(data);\r\n        });\r\n      }\r\n    })\r\n  );\r\n});\r\n\r\nwindow.addEventListener('activate', (e) => {\r\n  e.waitUntil(\r\n    caches.keys().then((keyList) => {\r\n      return Promise.all(keyList.map((key) => {\r\n        if(key !== cacheName) {\r\n          return caches.delete(key);\r\n        }\r\n      }));\r\n    })\r\n  );\r\n});\r\n","import * as serviceworker from './workers/service-worker';\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/js/workers/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\r\nimport './css/index.css';\r\nimport '../node_modules/office-ui-fabric-react/dist/css/fabric.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\ninitializeIcons();\r\n\r\nReactDOM.render(\r\n  <Fabric>\r\n    <App />\r\n  </Fabric>\r\n  , document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}