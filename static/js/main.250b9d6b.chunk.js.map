{"version":3,"sources":["components/Toolbars.js","utils/authConnector.js","utils/authUtils.js","components/AuthScreen.js","utils/ledgerConnector.js","workers/syncWorker.js","components/LedgerDetails.js","components/LedgerList.js","App.js","workers/service-worker.js","serviceWorker.js","index.js"],"names":["StandardToolbar","props","className","title","HomeToolbar","showBackButton","onClick","buttonCallback","EditToolbar","icon","getServerUrl","isReachable","fetch","this","method","mode","then","resp","catch","err","login","username","password","url","headers","body","JSON","stringify","UserName","Password","response","ok","json","data","success","token","register","getToken","localStorage","getItem","saveToken","setItem","AuthSceen","useState","showLoginPage","setShowLoginPage","showRegisterPage","setShowRegisterPage","showSpinner","setShowSpinner","regSuccess","setRegSuccess","regFailed","setRegFailed","loginFailed","setLoginFailed","verifyFailed","setVerifyFailed","LoginUserName","setLoginUserName","LoginPassword","setLoginPassword","RegUserName","setRegUserName","RegPassword","setRegPassword","RegPasswordVerify","setRegPasswordVerify","handleDismiss","renderToolbar","indeterminate","onSubmit","event","preventDefault","authConnector","result","authUtils","navigator","popPage","isOpen","value","onChange","e","target","placeholder","required","type","modifier","db","listLedgers","getUrl","authHeader","Headers","status","getLedger","year","month","addLedger","ledger","addUrl","updateLedger","updateUrl","Id","deleteLedger","deleteUrl","LedgerDetails","parameters","selection","saveSuccess","setSaveSuccess","saveFailed","setSaveFailed","dataLoaded","setDataLoaded","Type","Month","Year","Debits","DebitTotal","Credits","CreditTotal","setLedger","newLedger","useRef","useEffect","console","log","ledgerConnector","current","state","workLedger","concat","Label","Amount","pushPage","component","AuthScreen","calculateTotal","total","parseInt","onChangeHandler","name","page","dataset","index","reduce","newExpense","newIncome","renderExpRow","row","data-index","data-page","renderIncRow","Expenses","dataSource","renderRow","size","default","Income","save","renderBottomToolbar","style","padding","textAlign","width","display","swipeable","position","renderTabs","content","tab","label","LedgerList","months","pullText","setPullText","ledgers","setLedgers","sortLedgers","a","b","updateLedgerList","done","ledgerList","filter","item","sort","selectionHandler","showFixed","onLoad","tappable","data-year","data-month","date","Date","latestYear","getFullYear","latestMonth","getMonth","length","App","initialRoute","renderPage","route","React","createElement","dbRequest","window","indexedDB","open","onsuccess","onerror","onupgradeneeded","objectStore","createObjectStore","autoIncrement","createIndex","unique","serverUrl","isOnline","handleConnection","onLine","online","addEventListener","setInterval","transaction","openCursor","cursor","key","serverUpd","parse","UpdatedAt","postMessage","delete","continue","onmessage","add","appShellFiles","syncWorker","waitUntil","caches","cache","addAll","respondWith","request","put","clone","match","r","Response","error","keys","keyList","Promise","all","map","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.250b9d6b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Toolbar, ToolbarButton, BackButton, Icon } from 'react-onsenui';\r\n\r\nexport function StandardToolbar(props) {\r\n  return (\r\n    <Toolbar>\r\n      <div className=\"center\">\r\n        {props.title}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport function HomeToolbar(props) {\r\n  return (\r\n    <Toolbar>\r\n      <div className=\"left\">\r\n        {props.showBackButton && <BackButton>Back</BackButton>}\r\n      </div>\r\n      <div className=\"center\">\r\n        {props.title}\r\n      </div>\r\n      <div className=\"right\">\r\n        <ToolbarButton onClick={props.buttonCallback}>\r\n          Fixed items\r\n        </ToolbarButton>\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nexport function EditToolbar(props) {\r\n  return (\r\n    <Toolbar>\r\n      <div className=\"left\">\r\n        {props.showBackButton && <BackButton>Back</BackButton>}\r\n      </div>\r\n      <div className=\"center\">\r\n        {props.title}\r\n      </div>\r\n      <div className=\"right\">\r\n        <ToolbarButton>\r\n          <Icon icon='check' onClick={props.buttonCallback} ></Icon>\r\n        </ToolbarButton>\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n}\r\n","function getServerUrl() {\n  return 'https://fintrack-image-occpy2fuaa-an.a.run.app';\n}\n\nfunction isReachable() {\n  return fetch(this.getServerUrl(), { method: 'HEAD', mode: 'no-cors' })\n    .then((resp) => {\n      return true;\n    })\n    .catch((err) => {\n      return false;\n    });\n}\n\nfunction login(username, password) {\n  var url = this.getServerUrl() + '/api/user/login';\n\n  return fetch(url, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ UserName: username, Password: password })\n  }).then((response) => {\n    if (response.ok) {\n      return response.json().then((data) => {\n        return {\n          success: true,\n          token: data.token\n        };\n      });\n    }\n    else {\n      return {\n        success: false\n      };\n    }\n  });\n}\n\nfunction register(username, password) {\n  var url = this.getServerUrl() + '/api/user/register';\n\n  return fetch(url, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ UserName: username, Password: password })\n  }).then((response) => {\n    if (response.ok) {\n      return {\n        success: true\n      };\n    }\n    else {\n      return {\n        success: false\n      };\n    }\n  });\n}\n\nexport default {\n  getServerUrl,\n  isReachable,\n  login,\n  register\n};\n","function getToken() {\n  return localStorage.getItem('authToken');\n}\n\nfunction saveToken(token) {\n  localStorage.setItem('authToken', token);\n}\n\nexport default {\n  getToken,\n  saveToken\n};","import React from 'react';\nimport { useState } from 'react';\nimport { Page, Input, Button, Toast, ProgressBar } from 'react-onsenui';\nimport { StandardToolbar } from './Toolbars';\nimport authConnector from '../utils/authConnector';\nimport authUtils from '../utils/authUtils';\n\nconst AuthSceen = (props) => {\n  const [showLoginPage, setShowLoginPage] = useState(true);\n  const [showRegisterPage, setShowRegisterPage] = useState(false);\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [regSuccess, setRegSuccess] = useState(false);\n  const [regFailed, setRegFailed] = useState(false);\n  const [loginFailed, setLoginFailed] = useState(false);\n  const [verifyFailed, setVerifyFailed] = useState(false);\n  const [LoginUserName, setLoginUserName] = useState('');\n  const [LoginPassword, setLoginPassword] = useState('');\n  const [RegUserName, setRegUserName] = useState('');\n  const [RegPassword, setRegPassword] = useState('');\n  const [RegPasswordVerify, setRegPasswordVerify] = useState('');\n\n  const showLogin = () => {\n    setShowLoginPage(true);\n    setShowRegisterPage(false);\n    setRegSuccess(false);\n    setRegFailed(false);\n    setLoginFailed(false);\n  }\n\n  const showRegister = () => {\n    setShowLoginPage(false);\n    setShowRegisterPage(true);\n    setRegSuccess(false);\n    setRegFailed(false);\n    setLoginFailed(false);\n  }\n\n  const handleDismiss = () => {\n    setRegSuccess(false);\n    setRegFailed(false);\n    setLoginFailed(false);\n    setVerifyFailed(false);\n  }\n\n  const verifyPassword = (value) => {\n    return RegPasswordVerify === RegPassword;\n  }\n\n  const handleLogin = (event) => {\n    event.preventDefault();\n\n    setShowSpinner(true);\n    authConnector.login(LoginUserName, LoginPassword).then((result) => {\n      setShowSpinner(false);\n      if (result.success) {\n        authUtils.saveToken(result.token);\n        handleDismiss();\n        props.navigator.popPage();\n      }\n      else {\n        handleDismiss();\n        setLoginFailed(true);\n      }\n    });\n  }\n\n  const handleRegister = (event) => {\n    event.preventDefault();\n\n    if (!verifyPassword()) {\n      setVerifyFailed(true);\n      return;\n    }\n\n    setShowSpinner(true);\n    authConnector.register(LoginUserName, LoginPassword).then((result) => {\n      setShowSpinner(false);\n      if (result.success) {\n        handleDismiss();\n        setShowLoginPage(true);\n        setRegSuccess(true);\n      }\n      else {\n        setRegFailed(true);\n      }\n    });\n  }\n\n  const renderToolbar = () => {\n    return (\n      <StandardToolbar title=\"Login\" />\n    );\n  }\n\n  return (\n    <Page renderToolbar={renderToolbar}>\n      { showSpinner && <ProgressBar indeterminate /> }\n      <div>\n        {\n          showLoginPage &&\n          <form onSubmit={handleLogin}>\n            <div className=\"center\">\n              <Toast isOpen={regSuccess}>\n                <div className=\"message\">\n                  Registration successful\n                </div>\n                <button onClick={handleDismiss}>\n                  Dismiss\n                </button>\n              </Toast>\n              <Toast isOpen={loginFailed}>\n                <div className=\"message\">\n                  The username and password do not match\n                </div>\n                <button onClick={handleDismiss}>\n                  Dismiss\n                </button>\n              </Toast>\n              <Input value={LoginUserName} onChange={(e) => setLoginUserName(e.target.value)} placeholder=\"User name\" required />\n              <Input type=\"password\" value={LoginPassword} onChange={(e) => setLoginPassword(e.target.value)} placeholder=\"Password\" required />\n              <Button type=\"submit\">Login</Button>\n              <Button onClick={showRegister} modifier=\"quiet\">Click here to register</Button>\n            </div>\n          </form>\n        }\n        {\n          showRegisterPage &&\n          <form onSubmit={handleRegister}>\n            <div className=\"center\">\n              <Toast isOpen={regFailed}>\n                <div className=\"message\">\n                  Registration failed\n                </div>\n                <button onClick={handleDismiss}>\n                  Dismiss\n                </button>\n              </Toast>\n              <Toast isOpen={verifyFailed}>\n                <div className=\"message\">\n                  The passwords do not match.\n                </div>\n                <button onClick={handleDismiss}>\n                  Dismiss\n                </button>\n              </Toast>\n              <Input value={RegUserName} onChange={(e) => setRegUserName(e.target.value)} placeholder=\"User name\" required />\n              <Input type=\"password\" value={RegPassword} onChange={(e) => setRegPassword(e.target.value)} placeholder=\"Password\" required />\n              <Input type=\"password\" value={RegPasswordVerify} onChange={(e) => setRegPasswordVerify(e.target.value)} placeholder=\"Verify password\" required />\n              <Button type=\"submit\">Register</Button>\n              <Button onClick={showLogin} modifier=\"quiet\">Return to login</Button>\n            </div>\n          </form>\n        }\n      </div>\n    </Page>\n  );\n}\n\nexport default AuthSceen;\n","function getServerUrl() {\n  return 'https://fintrack-image-occpy2fuaa-an.a.run.app';\n}\n\nfunction listLedgers(token) {\n  var getUrl = this.getServerUrl() + '/api/ledger/list';\n\n  var authHeader = new Headers({\n    'Authorization': 'Bearer ' + token\n  });\n\n  return fetch(getUrl, { headers: authHeader }).then((response) => {\n    if (response.ok) {\n      return response.json().then((data) => {\n        return {\n          success: true,\n          data: data\n        };\n      });\n    }\n    else {\n      if (response.status === 404) {\n        return {\n          success: false,\n          status: 'Not found'\n        };\n      }\n      else if (response.status === 401 || response.status === 403) {\n        return {\n          success: false,\n          status: 'Unauthorized'\n        };\n      }\n      return {\n        success: false,\n        status: 'Error',\n        data: []\n      };\n    }\n  });\n}\n\nfunction getLedger(token, year, month) {\n  var getUrl = this.getServerUrl() + '/api/ledger/get?year=' + year + '&month=' + month;\n  var authHeader = new Headers({\n    'Authorization': 'Bearer ' + token\n  });\n\n  return fetch(getUrl, { headers: authHeader }).then((response) => {\n    if (response.ok) {\n      return response.json().then((data) => {\n        return {\n          success: true,\n          data: data\n        };\n      });\n    }\n    else {\n      if (response.status === 401 || response.status === 403) {\n        return {\n          success: false,\n          status: 'Unauthorized'\n        };\n      }\n      else if (response.status === 404) {\n        return {\n          success: false,\n          status: 'Not found'\n        };\n      }\n      return {\n        success: false,\n        status: 'Error',\n        data: {\n          \"Id\": \"\",\n          \"Owner\": \"\",\n          \"Type\": \"\",\n          \"Month\": \"\",\n          \"Year\": \"\",\n          \"Debits\": [\n          ],\n          \"DebitTotal\": \"\",\n          \"Credits\": [\n          ],\n          \"CreditTotal\": \"\"\n        }\n      };\n    }\n  });\n}\n\nfunction addLedger(token, ledger) {\n  var addUrl = this.getServerUrl() + '/api/ledger/add';\n  var authHeader = new Headers({\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json'\n  });\n\n  return fetch(addUrl, {\n    method: 'POST',\n    headers: authHeader,\n    body: JSON.stringify(ledger)\n  })\n  .then((response) => {\n    if (response.ok) {\n      return {\n        success: true\n      };\n    }\n    else {\n      if (response.status === 401 || response.status === 403) {\n        return {\n          success: false,\n          status: 'Unauthorized'\n        };\n      }\n      return {\n        success: false,\n        status: 'Error'\n      };\n    }\n  });\n}\n\nfunction updateLedger(token, ledger) {\n  var updateUrl = this.getServerUrl() + '/api/ledger/update?id=' + ledger.Id;\n  var authHeader = new Headers({\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json'\n  });\n\n  return fetch(updateUrl, {\n    method: 'PUT',\n    headers: authHeader,\n    body: JSON.stringify(ledger)\n  })\n  .then((response) => {\n    if (response.ok) {\n      return {\n        success: true\n      };\n    }\n    else {\n      if (response.status === 401 || response.status === 403) {\n        return {\n          success: false,\n          status: 'Unauthorized'\n        };\n      }\n      return {\n        success: false,\n        status: 'Error'\n      };\n    }\n  });\n}\n\nfunction deleteLedger(token, ledger) {\n  var deleteUrl = this.getServerUrl() + '/api/ledger/delete?id=' + ledger.Id;\n  var authHeader = new Headers({\n    'Authorization': 'Bearer ' + token,\n    'Content-Type': 'application/json'\n  });\n\n  return fetch(deleteUrl, {\n    method: 'DELETE',\n    headers: authHeader\n  })\n  .then((response) => {\n    if (response.ok) {\n      return {\n        success: true\n      };\n    }\n    else {\n      if (response.status === 401 || response.status === 403) {\n        return {\n          success: false,\n          status: 'Unauthorized'\n        };\n      }\n      return {\n        success: false,\n        status: 'Error'\n      };\n    }\n  });\n}\n\nexport default {\n  getServerUrl,\n  listLedgers,\n  getLedger,\n  addLedger,\n  updateLedger,\n  deleteLedger\n};\n","import authUtils from './../utils/authUtils.js';\nimport authConnector from './../utils/authConnector.js';\nimport ledgerConnector from './../utils/ledgerConnector.js';\n\n// IndexedDB setup\nvar db;\nvar dbRequest = window.indexedDB.open('FinTrackDB', 1);\ndbRequest.onsuccess = (event) => {\n  db = event.target.result;\n};\ndbRequest.onerror = (event) => {\n  console.log(\"Unable to use IndexedDB\");\n};\ndbRequest.onupgradeneeded = (event) => {\n  db = event.target.result;\n\n  var objectStore = db.createObjectStore('ledgers', { autoIncrement : true });\n  objectStore.createIndex('Id', 'Id', { unique: false });\n  objectStore.createIndex('Year', 'Year', { unique: false });\n  objectStore.createIndex('Month', 'Month', { unique: false });\n};\n\n// Online offline handlers\nvar serverUrl = ledgerConnector.getServerUrl();\nvar isOnline = true;\nwindow.addEventListener('online', handleConnection);\nwindow.addEventListener('offline', handleConnection);\n\nfunction handleConnection() {\n  if (navigator.onLine) {\n    authConnector.isReachable(serverUrl).then((online) => {\n      if (online) {\n        console.log('Client online');\n        isOnline = true;\n      } else {\n        console.log('No connectivity');\n        isOnline = false;\n      }\n    });\n  } else {\n    console.log('Client offline');\n    isOnline = false;\n  }\n}\n\n// Worker core\nvar token = authUtils.getToken();\nfunction onmessage(e) {\n  var objectStore = db.transaction(['ledgers'], 'readwrite').objectStore('ledgers');\n  objectStore.add(e.data);\n}\n\nsetInterval(sync, 10000);\n\nfunction sync() {\n  if (isOnline) {\n    var objectStore = db.transaction('ledgers').objectStore('ledgers');\n    objectStore.openCursor().onsuccess = (e) => {\n      var cursor = e.target.result;\n      if (cursor) {\n        console.log('Syncing entry ' + cursor.value.key);\n        syncLedger(cursor.value).then((result) => {\n          if (result) {\n            console.log('Entry ' + cursor.value.key + ' synced');\n            console.log('Deleting entry ' + cursor.value.key);\n            db.transaction('ledgers', 'readwrite').objectStore('ledgers').delete(cursor.value.key).onsuccess = () => true;\n          }\n        }).then((result) => {\n          console.log('Delete complete');\n          cursor.continue();\n        }).catch(() => {\n          console.log('Syncing failed for entry ' + cursor.value.key);\n          cursor.continue();\n        });\n      }\n    };\n  }\n}\n\nfunction syncLedger(ledger) {\n  ledgerConnector.getLedger(token, ledger.Year, ledger.Month).then((result) => {\n    if (result.success) {\n      const serverUpd = Date.parse(result.data.UpdatedAt);\n      const localUpd = Date.parse(ledger.UpdatedAt);\n      if (localUpd > serverUpd) {\n        return updateLedger(ledger).then((result) => {\n          return result;\n        });\n      }\n      else {\n        return true;\n      }\n    }\n    else {\n      if (result.status === 'Unauthorized') {\n        postMessage('Unauthorized');\n        return false;\n      }\n      else if (result.status === 'Not found') {\n        return addLedger(ledger).then((result) => {\n          return result;\n        });\n      }\n    }\n  });\n}\n\nfunction updateLedger(ledger) {\n  ledgerConnector.updateLedger(token, ledger).then((result) => {\n    if (result.success) {\n      return true;\n    }\n    else {\n      if (result.status === 'Unauthorized') {\n        postMessage('Unauthorized');\n      }\n      return false;\n    }\n  });\n}\n\nfunction addLedger(ledger) {\n  ledgerConnector.addLedger(token, ledger).then((result) => {\n    if (result.success) {\n      return true;\n    }\n    else {\n      if (result.status === 'Unauthorized') {\n        postMessage('Unauthorized');\n      }\n      return false;\n    }\n  });\n}\n\nexport default {\n  onmessage\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Page, List, ListItem, Tabbar, Tab, Input, ProgressBar, Icon, Button, BottomToolbar, Toast } from 'react-onsenui';\nimport AuthScreen from './AuthScreen';\nimport { EditToolbar } from './Toolbars';\nimport ledgerConnector from '../utils/ledgerConnector';\nimport authUtils from './../utils/authUtils';\n\nconst LedgerDetails = (props) => {\n  let parameters = {\n    year: props.selection.year,\n    month: props.selection.month,\n    type: props.selection.year === 0 ? 'fixed' : 'regular'\n  };\n\n  const [saveSuccess, setSaveSuccess] = useState(false);\n  const [saveFailed, setSaveFailed] = useState(false);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [ledger, setLedger] = useState({\n    Type: parameters.type,\n    Month: parameters.month,\n    Year: parameters.year,\n    Debits: [],\n    DebitTotal: \"\",\n    Credits: [],\n    CreditTotal: \"\"\n  });\n\n  const newLedger = useRef(false);\n\n  useEffect(() => {\n    console.log(`Loading ${parameters.year}/${parameters.month}`);\n\n    const populateFixedItems = () => {\n      console.log(`Loading fixed items`);\n      setDataLoaded(false);\n\n      ledgerConnector.getLedger(authUtils.getToken(), 0, 0)\n      .then((result) => {\n        setDataLoaded(true);\n        if (result.success) {\n          let workLedger = {...ledger};\n          workLedger.Debits.concat({\n            Label: 'Fixed expenses',\n            Amount: result.data.DebitTotal\n          });\n          workLedger.Credits.concat({\n            Label: 'Fixed income',\n            Amount: result.data.CreditTotal\n          });\n          workLedger.DebitTotal = result.data.DebitTotal;\n          workLedger.CreditTotal = result.data.CreditTotal;\n\n          setLedger(workLedger);\n        }\n        else {\n          if (result.status === 'Unauthorized') {\n            props.navigator.pushPage({component: AuthScreen});\n          }\n        }\n      });\n    };\n\n    ledgerConnector.getLedger(authUtils.getToken(), parameters.year, parameters.month)\n    .then((result) => {\n      setDataLoaded(true);\n      if (result.success) {\n        setLedger(result.data);\n      }\n      else {\n        if (result.status === 'Not found') {\n          console.log('No data found. New ledger will be created');\n          newLedger.current = true;\n          if (this.state.ledger.Type === 'regular') {\n            populateFixedItems();\n          }\n        }\n        else if (result.status === 'Unauthorized') {\n          props.navigator.pushPage({component: AuthScreen});\n        }\n      }\n    });\n  });\n\n  const calculateTotal = (total, current) => {\n    if (current.Amount) {\n      return total + parseInt(current.Amount);\n    }\n    return total;\n  }\n\n  const onChangeHandler = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n    const page = event.target.dataset.page;\n    const index = parseInt(event.target.dataset.index);\n    console.log(`Updating ${name} of item ${index} of ${page}`);\n\n    let workLedger = {...ledger};\n    workLedger[page][index][name] = value;\n    workLedger.DebitTotal = workLedger.DebitTotal.reduce(calculateTotal, 0);\n    workLedger.CreditTotal = workLedger.CreditTotal.reduce(calculateTotal, 0);\n\n    setLedger(workLedger);\n  }\n\n  const newExpense = () => {\n    console.log(`Adding new expense`);\n\n    let workLedger = {...ledger};\n    workLedger.Debits.concat({\n      Label: '',\n      Amount: ''\n    });\n\n    setLedger(workLedger);\n  }\n\n  const newIncome = () => {\n    console.log(`Adding new income`);\n\n    let workLedger = {...ledger};\n    workLedger.Credits.concat({\n      Label: '',\n      Amount: ''\n    });\n\n    setLedger(workLedger);\n  }\n\n  const renderExpRow = (row, index) => {\n    return (\n      <ListItem>\n        <div className=\"left\">\n          <Input name=\"Label\" data-index={index} data-page=\"Debits\" value={ledger.Debits[index].Label} onChange={onChangeHandler} placeholder=\"Item\" />\n        </div>\n        <div className=\"right\">\n          <Input name=\"Amount\" data-index={index} data-page=\"Debits\" value={ledger.Debits[index].Amount} onChange={onChangeHandler} placeholder=\"Amount\" />\n        </div>\n      </ListItem>\n    );\n  }\n\n  const renderIncRow = (row, index) => {\n    return (\n      <ListItem>\n        <div className=\"left\">\n          <Input name=\"Label\" data-index={index} data-page=\"Credits\" value={ledger.Credits[index].Label} onChange={onChangeHandler} placeholder=\"Item\" />\n        </div>\n        <div className=\"right\">\n          <Input name=\"Amount\" data-index={index} data-page=\"Credits\" value={ledger.Credits[index].Amount} onChange={onChangeHandler} placeholder=\"Amount\" />\n        </div>\n      </ListItem>\n    );\n  }\n\n  const Expenses = (props) => {\n    return (\n      <Page>\n        <List\n          dataSource={ledger.Debits}\n          renderRow={renderExpRow} />\n        <Button modifier=\"large quiet\">\n          <Icon size={{default: 16}}\n                    icon={{default: 'plus'}}\n                    onClick={newExpense}/>&nbsp;\n            New item\n        </Button>\n      </Page>\n    );\n  }\n\n  const Income = (props) => {\n    return (\n      <Page>\n        <List\n          dataSource={ledger.Credits}\n          renderRow={renderIncRow} />\n        <Button modifier=\"large quiet\">\n          <Icon size={{default: 16}}\n                    icon={{default: 'plus'}}\n                    onClick={newIncome}/>&nbsp;\n            New item\n        </Button>\n      </Page>\n    );\n  }\n\n  const save = () => {\n    setSaveSuccess(false);\n    setSaveFailed(false);\n\n    if (newLedger.current) {\n      ledgerConnector.addLedger(authUtils.getToken(), ledger).then((result) => {\n        if (result.success) {\n          setSaveSuccess(true);\n        }\n        else {\n          setSaveFailed(true);\n        }\n      });\n    }\n    else {\n      ledgerConnector.updateLedger(authUtils.getToken(), ledger).then((result) => {\n        if (result.success) {\n          setSaveSuccess(true);\n        }\n        else {\n          setSaveFailed(true);\n        }\n      });\n    }\n  }\n\n  const handleDismiss = () => {\n    setSaveSuccess(false);\n    setSaveFailed(false);\n  }\n\n  const renderToolbar = () => {\n    return (\n      <EditToolbar showBackButton={true} title=\"Edit details\" buttonCallback={save} />\n    );\n  }\n\n  const renderBottomToolbar = () => {\n    return (\n      <BottomToolbar>\n        <div style={{padding: '16px'}}>\n          <div style={{textAlign: 'left', width: '50%', display: 'inline-block'}}>\n          Nett\n          </div>\n          <div style={{textAlign: 'right', width: '50%', display: 'inline-block'}}>\n          {ledger.CreditTotal - ledger.DebitTotal}\n          </div>\n        </div>\n      </BottomToolbar>\n    );\n  }\n\n  const renderTabs = () => {\n    return [\n      {\n        content: <Expenses />,\n        tab: <Tab label=\"Expenses\" icon=\"\" />\n      },\n      {\n        content: <Income />,\n        tab: <Tab label=\"Income\" icon=\"\" />\n      },\n    ];\n  }\n\n  return (\n    <Page renderToolbar={renderToolbar} renderBottomToolbar={renderBottomToolbar}>\n      { !dataLoaded && <ProgressBar indeterminate /> }\n      <Toast isOpen={saveSuccess}>\n        <div className=\"message\">\n          Saved successfully.\n        </div>\n        <button onClick={handleDismiss}>\n          Dismiss\n        </button>\n      </Toast>\n      <Toast isOpen={saveFailed}>\n        <div className=\"message\">\n          Saving failed. Please try again.\n        </div>\n        <button onClick={handleDismiss}>\n          Dismiss\n        </button>\n      </Toast>\n      <Tabbar\n        swipeable={true}\n        position='auto'\n        renderTabs={renderTabs} />\n    </Page>\n  );\n}\n\nexport default LedgerDetails;\n","import React, { useState, useEffect } from 'react';\nimport { Page, List, ListItem, ProgressBar, Icon, Button, PullHook } from 'react-onsenui';\nimport AuthScreen from './AuthScreen';\nimport { HomeToolbar } from './Toolbars';\nimport ledgerConnector from './../utils/ledgerConnector';\nimport authUtils from './../utils/authUtils';\nimport LedgerDetails from './LedgerDetails';\n\nconst LedgerList = (props) => {\n  const months = ['', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const [pullText, setPullText] = useState('Pull to refresh');\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [ledgers, setLedgers] = useState([]);\n\n  const sortLedgers = (a, b) => {\n    if (a.Year !== b.Year) {\n      return b.Year - a.Year;\n    }\n    return b.Month - a.Month;\n  }\n\n  const updateLedgerList = (done = null) => {\n    setDataLoaded(false);\n    ledgerConnector.listLedgers(authUtils.getToken())\n    .then((result) => {\n      setDataLoaded(true);\n      if (result.success) {\n        let ledgerList = result.data.filter((item) => {\n          return item.Type === 'regular';\n        });\n        ledgerList.sort(sortLedgers);\n        setLedgers(ledgerList);\n      }\n      else {\n        if (result.status === 'Unauthorized') {\n          props.navigator.pushPage({component: AuthScreen});\n        }\n      }\n      if (done) {\n        done();\n      }\n    });\n  }\n\n  useEffect(() => {\n    updateLedgerList();\n  });\n\n  const addLedger = () => {\n    let date = new Date();\n    let latestYear = date.getFullYear();\n    let latestMonth = date.getMonth() + 1;\n\n    if (ledgers.length > 0) {\n      latestYear = parseInt(ledgers[0].Year);\n      latestMonth = parseInt(ledgers[0].Month);\n\n      latestMonth++;\n      if (latestMonth === 13) {\n        latestYear++;\n        latestMonth = 1;\n      }\n    }\n\n    props.navigator.pushPage({component: LedgerDetails, props: {selection: {year: latestYear, month: latestMonth}}});\n  }\n\n  const selectionHandler = (e) => {\n    const year = parseInt(e.target.dataset.year);\n    const month = parseInt(e.target.dataset.month);\n\n    props.navigator.pushPage({component: LedgerDetails, props: {selection: {year: year, month: month}}});\n  }\n\n  const pullStateHandler = (e) => {\n    switch (e.state) {\n      case 'initial':\n        setPullText('Pull to refresh');\n        break;\n      case 'preaction':\n        setPullText('Release');\n        break;\n      case 'action':\n        setPullText('Loading...');\n        break;\n    }\n  }\n\n  const showFixed = () => {\n    props.navigator.pushPage({component: LedgerDetails, props: {selection: {year: 0, month: 0}}});\n  }\n\n  const renderToolbar = () => {\n    return (\n      <HomeToolbar showBackButton={false} title=\"Ledgers\" buttonCallback={showFixed} />\n    );\n  }\n\n  const renderRow = (row, index) => {\n    return (\n      <ListItem tappable modifier=\"chevron\" data-year={ledgers[index].Year} data-month={ledgers[index].Month} onClick={selectionHandler}>\n        <div className=\"center\">{`${ledgers[index].Year} ${months[ledgers[index].Month]}`}</div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <Page renderToolbar={renderToolbar}>\n      { !dataLoaded && <ProgressBar indeterminate /> }\n      <PullHook onChange={pullStateHandler} onLoad={updateLedgerList}>\n        {pullText}\n      </PullHook>\n      <List\n          dataSource={ledgers}\n          renderRow={renderRow} />\n      <Button modifier=\"large quiet\">\n        <Icon size={{default: 16}}\n                  icon={{default: 'plus'}}\n                  onClick={addLedger}/>&nbsp;\n          New item\n      </Button>\n    </Page>\n  );\n};\n\nexport default LedgerList;\n","import React from 'react';\nimport { Navigator } from 'react-onsenui';\nimport LedgerList from './components/LedgerList';\nimport './css/App.css';\n\n\nconst App = () => {\n  const renderPage = (route, navigator) => {\n    const props = route.props || {};\n    props.navigator = navigator;\n\n    return React.createElement(route.component, props);\n  }\n\n  return (\n    <Navigator\n      swipeable\n      initialRoute={{component: LedgerList}}\n      renderPage={renderPage}\n     />\n  );\n}\n\nexport default App;\n","import syncWorker from './syncWorker';\n\nvar cacheName = 'fintrackCache-v1';\nvar appShellFiles = [\n  // List all static files\n  ''\n];\n\nsyncWorker.onmessage = (e) => {\n  if (e.data == 'Unauthorized') {\n\n  }\n};\n\nwindow.addEventListener('install', (e) => {\n  console.log('[Service worker] Install');\n  e.waitUntil(\n    caches.open(cacheName).then((cache) => {\n      console.log('[Service worker] Caching app shell');\n      return cache.addAll(appShellFiles);\n    })\n  );\n});\n\nwindow.addEventListener('fetch', (e) => {\n  e.respondWith(\n    // Try loading through network first\n    fetch(e.request).then((response) => {\n      return caches.open(cacheName).then((cache) => {\n        console.log('[Service Worker] Caching new resource: '+ e.request.url);\n        cache.put(e.request, response.clone());\n        return response;\n      });\n    }).catch(() => {\n      // Search the cache if it's a GET\n      if (e.request.method == 'GET') {\n        caches.match(e.request).then((r) => {\n          return r;\n        }).catch(() => {\n          return new Response(JSON.stringify({ error: 'No network connection' }));\n        });\n      }\n      // Save the data to be synced later\n      else {\n        e.request.json().then((data) => {\n          syncWorker.postMessage(data);\n        });\n      }\n    })\n  );\n});\n\nwindow.addEventListener('activate', (e) => {\n  e.waitUntil(\n    caches.keys().then((keyList) => {\n      return Promise.all(keyList.map((key) => {\n        if(key !== cacheName) {\n          return caches.delete(key);\n        }\n      }));\n    })\n  );\n});\n","import * as serviceworker from './workers/service-worker';\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/js/workers/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}